{"version":3,"sources":["webpack:///./src/components/pages/home-page/photography-block.tsx","webpack:///./src/components/pages/home-page/graphical-arts-block.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/pages/home-page/gamedev-block.tsx"],"names":["styled","div","TextBlock","ImagesGrid","ul","ImagesBlockWrapper","VideoBlock","h3","ImagesBlock","props","imageGroup","gfycatId","autoPlay","playsInline","preload","poster","tabIndex","controls","src","type","paths","slice","max","length","map","imgPath","i","key","loading","basePath","width","height","imageGroups","title","PhotographyBlock","Content","content","style","backgroundColor","maxImages","ImagesBlockHeader","GraphicalArtsBlock","Wrapper","ContentBlock","Home","padding","display","justifyContent","extended","to","marginTop","marginBottom","YouTubeVideoBlock","ImagesGroupsList","ContentWrapper","href","target","GamedevBlock","frameBorder","allow","allowFullScreen"],"mappings":"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","file":"component---src-pages-index-tsx-b5965b07543aa33b6b79.js","sourcesContent":["import * as React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst layoutWidth = 1280;\r\nconst layoutPadding = '1em';\r\nconst ContentBlock = styled.div`\r\n  padding: 0 ${layoutPadding};\r\n  max-width: ${layoutWidth}px;\r\n  margin: 0 auto;\r\n`;\r\n// @todo DRY\r\nconst TextBlock = styled.div`\r\n/* text-align: justify; */\r\n\r\n    &:after {\r\n        content: \".\";\r\n        visibility: hidden;\r\n        display: block;\r\n        height: 0;\r\n        clear: both;\r\n    }\r\n\r\n    > * + * {\r\n        margin-top: 1em;\r\n    }\r\n\r\n    p {\r\n        color: rgba(0, 0, 0, .5);\r\n        font-size: .6em;\r\n    }\r\n\r\n    a {\r\n        border-bottom: 1px solid;\r\n\r\n        &:hover {\r\n            color: #fff;\r\n            background-color: rgba(0, 0, 0, .5);\r\n        }\r\n    }\r\n\r\n    strong {\r\n        font-weight: bold;\r\n    }\r\n`;\r\nconst imagesListSpacing = '.5em';\r\nconst imagesColumns = 4;\r\nconst ImagesList = styled.ul`\r\n  line-height: 1;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin: -${imagesListSpacing} -${imagesListSpacing} 0 0;\r\n\r\n  > li {\r\n    margin: ${imagesListSpacing} ${imagesListSpacing} 0 0;\r\n    /* width: calc((${layoutWidth}px - 2 * ${layoutPadding} - ((${imagesColumns} - 1) * ${imagesListSpacing})) / ${imagesColumns}); */\r\n  }\r\n\r\n  img {\r\n    display: block;\r\n    width: 100%;\r\n    max-height: 200px;\r\n    transition: transform .2s;\r\n    box-shadow: 3px 3px 10px rgba(0, 0, 0, .25);\r\n\r\n    &:hover {\r\n      transform: scale(1.1);\r\n    }\r\n  }\r\n`;\r\nconst ImagesList2 = styled.ul`\r\n  line-height: 1;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  /* justify-content: center; */\r\n  margin: -${imagesListSpacing} -${imagesListSpacing} 0 0;\r\n\r\n  > li {\r\n    margin: ${imagesListSpacing} ${imagesListSpacing} 0 0;\r\n    /* width: calc((${layoutWidth}px - 2 * ${layoutPadding} - ((${imagesColumns} - 1) * ${imagesListSpacing})) / ${imagesColumns}); */\r\n\r\n  }\r\n\r\n  img {\r\n    display: block;\r\n    /* width: 100%; */\r\n    /* height: 100%; */\r\n    width: 200px;\r\n    height: 200px;\r\n    object-fit: cover;\r\n    /* transition: transform .2s; */\r\n    /* box-shadow: 3px 3px 10px rgba(0, 0, 0, .25); */\r\n\r\n    &:hover {\r\n      /* transform: scale(1.1); */\r\n    }\r\n  }\r\n`;\r\nconst ImagesGrid = styled.div`\r\n    display: grid;\r\n    /* grid-template-rows: repeat(8, 5vw); */\r\n    /* grid-template-columns: repeat(4, 1fr); */\r\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n    grid-gap: 1em;\r\n\r\n    img {\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n        /* width: 350px;\r\n        height: 350px; */\r\n        object-fit: cover;\r\n    }\r\n`;\r\n\r\nconst photosNature = [\r\n    \"2020-11-23 DSC_0008_edit1_square.JPG\",\r\n    \"2020-11-20 DSC_0047_edit1_square.JPG\",\r\n    \"2020-11-20 DSC_0044_edit1_square.jpg\",\r\n    \"2020-09-12 DSC_0094_square.JPG\",\r\n    \"2020-09-12 DSC_0085_square.JPG\",\r\n    \"2020-09-12 DSC_0060_square.JPG\",\r\n    \"2020-09-12 DSC_0053_square.JPG\",\r\n    \"2020-09-10 DSC_0007_square.JPG\",\r\n    \"2020-08-29 DSC_0063_square.JPG\",\r\n    \"2020-08-20 DSC_0106_square.JPG\",\r\n    \"2020-08-20 DSC_0067_square.JPG\",\r\n    \"2020-08-17 DSC_0073_square.JPG\",\r\n    \"2020-08-17 DSC_0025_square.JPG\",\r\n    \"2020-07-29 DSC_0041_crop1_square.JPG\",\r\n    '2020-07-29 DSC_0008_edit1_square.JPG',\r\n    \"2020-07-28 DSC_0027_edit1_square.JPG\",\r\n    '2020-07-27 DSC_0025_orig_square.JPG',\r\n    \"2020-07-25 DSC_0148_edit1_crop2_square.JPG\",\r\n    \"2020-07-25 DSC_0104_edit1_crop1_square.JPG\",\r\n    \"2020-07-24 DSC_0030_edit1_crop2_square.JPG\",\r\n    \"2020-07-10 DSC_0090_edit1_crop1_square.JPG\",\r\n    \"2020-06-25 DSC_0059_edit2_crop1_square.JPG\",\r\n    \"2020-06-23 DSC_0145_edit1_square.JPG\",\r\n    \"2020-06-17 DSC_0091_edit1_crop1_square.JPG\",\r\n    \"2020-06-16 DSC_0244_square.JPG\",\r\n    \"2020-06-16 DSC_0218_square.JPG\",\r\n    \"2020-06-16 DSC_0214_square.JPG\",\r\n    '2020-06-10 DSC_0152_edit1_crop1_square.JPG',\r\n    '2020-06-07 DSC_0098_edit1_crop1_square.JPG',\r\n    '2020-06-06 DSC_0112_edit1_square.JPG',\r\n    '2020-06-05 DSC_0073_edit3_square.JPG',\r\n    '2020-06-05 DSC_0073_edit2_square.JPG',\r\n    '2020-06-05 DSC_0034_edit3_crop1_square.JPG',\r\n    '2020-06-05 DSC_0033_edit5_square.JPG',\r\n    '2020-06-04 DSC_0392_edit1_square.JPG',\r\n    '2020-06-01 DSC_0297_edit1_square.JPG',\r\n    '2020-05-27 DSC_0025_edited_square.JPG',\r\n];\r\nconst photosPatterns = [\r\n    '2020-06-04 DSC_0383_edit1.JPG',\r\n    '2020-06-04 DSC_0391_edit1.JPG',\r\n    '2020-06-07 DSC_0008_edit2.JPG',\r\n    '2020-06-07 DSC_0068_edit1.JPG',\r\n    '2020-06-09 DSC_0044_edit1.JPG',\r\n    '2020-06-13 DSC_0025_edit1.JPG',\r\n    '2020-06-16 DSC_0154_edit1.JPG',\r\n    '2020-06-16 DSC_0249_edit1.JPG',\r\n];\r\n\r\nconst ImagesBlockWrapper = styled.div`\r\n    > * + * {\r\n        margin-top: 1em;\r\n    }\r\n`;\r\nconst VideoBlock = styled.div`\r\n    background-color: #eee;\r\n\r\n    video {\r\n        max-width: 640px;\r\n        margin: 0 auto;\r\n        display: block;\r\n    }\r\n`;\r\nconst ImagesBlockHeader = styled.h3`\r\n    color: rgba(0, 0, 0, .5);\r\n    font-size: .75em;\r\n    line-height: 1;\r\n    padding-bottom: .25em;\r\n    border-bottom: 1px solid rgba(0, 0, 0, .2);\r\n    margin-bottom: 1em;\r\n`;\r\n\r\nfunction ImagesBlock(props: {imageGroup: ImageGroup; max?: number}) {\r\n    const {imageGroup} = props;\r\n\r\n    return (\r\n        <ImagesBlockWrapper>\r\n            {/* <ImagesBlockHeader>{props.title}</ImagesBlockHeader> */}\r\n\r\n            {\r\n                imageGroup.gfycatId\r\n                &&\r\n                <VideoBlock>\r\n                    <video\r\n                        autoPlay={false}\r\n                        playsInline={false}\r\n                        preload=\"auto\"\r\n                        poster={`https://thumbs.gfycat.com/${imageGroup.gfycatId}-mobile.jpg`}\r\n                        tabIndex={-1}\r\n                        // width={1600}\r\n                        // height={900}\r\n                        controls={true}\r\n                    >\r\n                        <source src={`https://thumbs.gfycat.com/${imageGroup.gfycatId}-mobile.mp4`} type=\"video/mp4\" />\r\n                        <source src={`https://giant.gfycat.com/${imageGroup.gfycatId}.webm`} type=\"video/webm\" />\r\n                        <source src={`https://giant.gfycat.com/${imageGroup.gfycatId}.mp4`} type=\"video/mp4\" />\r\n                        <source src={`https://thumbs.gfycat.com/${imageGroup.gfycatId}-mobile.mp4`} type=\"video/mp4\" />\r\n                    </video>\r\n                </VideoBlock>\r\n            }\r\n\r\n            <ImagesGrid>\r\n                {\r\n                    imageGroup.paths.slice(0, props.max || imageGroup.paths.length).map((imgPath, i) => {\r\n                        return (\r\n                            <div key={imgPath}>\r\n                                <img\r\n                                    loading=\"lazy\"\r\n                                    src={`${imageGroup.basePath}${imgPath}`}\r\n                                    width={300}\r\n                                    height={300}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </ImagesGrid>\r\n        </ImagesBlockWrapper>\r\n    );\r\n}\r\n\r\ninterface ImageGroup {\r\n    title: string;\r\n    basePath: string;\r\n    paths: string[];\r\n    gfycatId?: string;\r\n    Content?: () => JSX.Element;\r\n}\r\n\r\nconst imageGroups: ImageGroup[] = [\r\n    {\r\n        title: \"Photography\",\r\n        basePath: '/images/photos/',\r\n        gfycatId: 'LikableWebbedFly',\r\n        paths: photosNature,\r\n    },\r\n];\r\n\r\nexport default function PhotographyBlock(props: {maxImages?: number; content?: React.FC}) {\r\n    const {content: Content} = props;\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ backgroundColor: '#fff' }}>\r\n                <div style={{  }}>\r\n                    <TextBlock>\r\n                        <h2>Photography</h2>\r\n\r\n                        {\r\n                            imageGroups.map(imageGroup => {\r\n                                return (\r\n                                    <ImagesBlock\r\n                                        key={imageGroup.title}\r\n                                        imageGroup={imageGroup}\r\n                                        max={props.maxImages}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n\r\n                        {\r\n                            Content\r\n                            &&\r\n                            <Content />\r\n                        }\r\n                    </TextBlock>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst layoutWidth = 1280;\r\nconst layoutPadding = '1em';\r\nconst ContentBlock = styled.div`\r\n  padding: 0 ${layoutPadding};\r\n  max-width: ${layoutWidth}px;\r\n  margin: 0 auto;\r\n`;\r\n// @todo DRY\r\nconst TextBlock = styled.div`\r\n    /* text-align: justify; */\r\n\r\n    &:after {\r\n        content: \".\";\r\n        visibility: hidden;\r\n        display: block;\r\n        height: 0;\r\n        clear: both;\r\n    }\r\n\r\n    > * + * {\r\n        margin-top: 1em;\r\n    }\r\n\r\n    p {\r\n        color: rgba(0, 0, 0, .5);\r\n        font-size: .6em;\r\n    }\r\n\r\n    a {\r\n        border-bottom: 1px solid;\r\n\r\n        &:hover {\r\n            color: #fff;\r\n            background-color: rgba(0, 0, 0, .5);\r\n        }\r\n    }\r\n\r\n    strong {\r\n        font-weight: bold;\r\n    }\r\n`;\r\nconst imagesListSpacing = '.5em';\r\nconst imagesColumns = 4;\r\nconst ImagesList = styled.ul`\r\n  line-height: 1;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin: -${imagesListSpacing} -${imagesListSpacing} 0 0;\r\n\r\n  > li {\r\n    margin: ${imagesListSpacing} ${imagesListSpacing} 0 0;\r\n    /* width: calc((${layoutWidth}px - 2 * ${layoutPadding} - ((${imagesColumns} - 1) * ${imagesListSpacing})) / ${imagesColumns}); */\r\n  }\r\n\r\n  img {\r\n    display: block;\r\n    width: 100%;\r\n    max-height: 200px;\r\n    transition: transform .2s;\r\n    box-shadow: 3px 3px 10px rgba(0, 0, 0, .25);\r\n\r\n    &:hover {\r\n      transform: scale(1.1);\r\n    }\r\n  }\r\n`;\r\nconst ImagesList2 = styled.ul`\r\n  line-height: 1;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  /* justify-content: center; */\r\n  margin: -${imagesListSpacing} -${imagesListSpacing} 0 0;\r\n\r\n  > li {\r\n    margin: ${imagesListSpacing} ${imagesListSpacing} 0 0;\r\n    /* width: calc((${layoutWidth}px - 2 * ${layoutPadding} - ((${imagesColumns} - 1) * ${imagesListSpacing})) / ${imagesColumns}); */\r\n\r\n  }\r\n\r\n  img {\r\n    display: block;\r\n    /* width: 100%; */\r\n    /* height: 100%; */\r\n    width: 200px;\r\n    height: 200px;\r\n    object-fit: cover;\r\n    /* transition: transform .2s; */\r\n    /* box-shadow: 3px 3px 10px rgba(0, 0, 0, .25); */\r\n\r\n    &:hover {\r\n      /* transform: scale(1.1); */\r\n    }\r\n  }\r\n`;\r\nconst ImagesGrid = styled.div`\r\n    display: grid;\r\n    /* grid-template-rows: repeat(8, 5vw); */\r\n    /* grid-template-columns: repeat(4, 1fr); */\r\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n    grid-gap: 1em;\r\n\r\n    img {\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n        /* width: 350px;\r\n        height: 350px; */\r\n        object-fit: cover;\r\n    }\r\n`;\r\n\r\nconst images3d = [\r\n    'clownfish_1_square.png',\r\n    // 'mineral_cube.gif',\r\n    // 'planet.gif',\r\n    'small_grid13_square.png',\r\n    'crystals14_square.png',\r\n    'mineral cube collage 3_square.png',\r\n    'pig hex_pigs_7_square.png',\r\n    'planet hns game assets 2 v9 1024x1024_square.png',\r\n    'low poly penguin 2 v11_square.png',\r\n    'rhino scene 9_square.png',\r\n    'low-poly4-hires_square.png',\r\n];\r\nconst images2d = [\r\n    \"planet-4_square.png\",\r\n    \"planet-6_square.png\",\r\n    \"planet-8_square.png\",\r\n    \"trees-showoff_square.png\",\r\n    \"sheep Screenshot (147)_square.png\",\r\n    // \"sheep Screenshot (142)_square.png\",\r\n    \"sheep Screenshot (140)_square.png\",\r\n    // \"sheep Screenshot (144)_square.png\",\r\n    \"sheep Screenshot (145)_square.png\",\r\n    \"sheep Screenshot (146)_square.png\",\r\n    'characters-collage_square.png',\r\n    '2d-scenes-collage_square.jpg',\r\n    'clouds-collage_square.jpg',\r\n    'patterns-collage_square.jpg',\r\n    '2018-06-07 meteor_square.png',\r\n    'clouds2_square.png',\r\n    'clouds_square.png',\r\n    'nebulas_square.png',\r\n    'pokemon DSC_0002_edit1_square.JPG',\r\n    'pokemon DSC_0001_edit1_square.JPG',\r\n];\r\nconst imagesProcgen = [\r\n    'screenshot_3840x2160_2020-02-22_18-32-43_square.png',\r\n    'screenshot_3840x2160_2020-02-22_20-05-41_square.png',\r\n    'screenshot_3840x2160_2020-02-22_19-43-51_square.png',\r\n    'procgen-patterns-collage-3_square.png',\r\n    'procgen-patterns-collage-2_square.png',\r\n    'procgen-patterns-collage-1_square.png',\r\n    'terrains-collage-2_square.png',\r\n    'terrains-collage-1_square.png',\r\n];\r\n\r\nconst ImagesBlockWrapper = styled.div`\r\n    > * + * {\r\n        margin-top: 1em;\r\n    }\r\n`;\r\nconst VideoBlock = styled.div`\r\n    background-color: #eee;\r\n\r\n    video {\r\n        max-width: 640px;\r\n        margin: 0 auto;\r\n        display: block;\r\n    }\r\n`;\r\nconst ImagesBlockHeader = styled.h3`\r\n    color: rgba(0, 0, 0, .5);\r\n    font-size: .75em;\r\n    line-height: 1;\r\n    padding-bottom: .25em;\r\n    border-bottom: 1px solid rgba(0, 0, 0, .1);\r\n    margin-bottom: 1em;\r\n    margin-top: 2em;\r\n`;\r\n\r\nfunction ImagesBlock(props: {imageGroup: ImageGroup; max?: number}) {\r\n    const {imageGroup} = props;\r\n\r\n    return (\r\n        <ImagesBlockWrapper>\r\n            <ImagesBlockHeader>{imageGroup.title}</ImagesBlockHeader>\r\n\r\n            {\r\n                imageGroup.gfycatId\r\n                &&\r\n                <VideoBlock>\r\n                    <video\r\n                        autoPlay={false}\r\n                        playsInline={false}\r\n                        preload=\"auto\"\r\n                        poster={`https://thumbs.gfycat.com/${imageGroup.gfycatId}-mobile.jpg`}\r\n                        tabIndex={-1}\r\n                        // width={1600}\r\n                        // height={900}\r\n                        controls={true}\r\n                    >\r\n                        <source src={`https://thumbs.gfycat.com/${imageGroup.gfycatId}-mobile.mp4`} type=\"video/mp4\" />\r\n                        <source src={`https://giant.gfycat.com/${imageGroup.gfycatId}.webm`} type=\"video/webm\" />\r\n                        <source src={`https://giant.gfycat.com/${imageGroup.gfycatId}.mp4`} type=\"video/mp4\" />\r\n                        <source src={`https://thumbs.gfycat.com/${imageGroup.gfycatId}-mobile.mp4`} type=\"video/mp4\" />\r\n                    </video>\r\n                </VideoBlock>\r\n            }\r\n\r\n            <ImagesGrid>\r\n                {\r\n                    imageGroup.paths.slice(0, props.max || imageGroup.paths.length).map((imgPath, i) => {\r\n                        return (\r\n                            <div key={imgPath}>\r\n                                <img\r\n                                    loading=\"lazy\"\r\n                                    src={`${imageGroup.basePath}${imgPath}`}\r\n                                    width={300}\r\n                                    height={300}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </ImagesGrid>\r\n        </ImagesBlockWrapper>\r\n    );\r\n}\r\n\r\ninterface ImageGroup {\r\n    title: string;\r\n    basePath: string;\r\n    paths: string[];\r\n    gfycatId?: string;\r\n    Content?: () => JSX.Element;\r\n}\r\n\r\nconst imageGroups: ImageGroup[] = [\r\n    {\r\n        title: \"3D (Blender)\",\r\n        basePath: '/images/3d/',\r\n        paths: images3d,\r\n    },\r\n    {\r\n        title: \"Drawing & painting\",\r\n        basePath: '/images/2d/',\r\n        paths: images2d,\r\n    },\r\n    {\r\n        title: \"Procedural generation\",\r\n        basePath: '/images/projects/',\r\n        gfycatId: 'DiligentDaringHairstreakbutterfly',\r\n        paths: imagesProcgen,\r\n    },\r\n];\r\n\r\nexport default function GraphicalArtsBlock(props: {maxImages?: number; content?: React.FC}) {\r\n    const {content: Content} = props;\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ backgroundColor: '#fff' }}>\r\n                <div style={{  }}>\r\n                    <TextBlock>\r\n                        <h2>Graphic art</h2>\r\n\r\n                        {\r\n                            imageGroups.map(imageGroup => {\r\n                                return (\r\n                                    <ImagesBlock\r\n                                        key={imageGroup.title}\r\n                                        imageGroup={imageGroup}\r\n                                        max={props.maxImages}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n\r\n                        {\r\n                            Content\r\n                            &&\r\n                            <Content />\r\n                        }\r\n                    </TextBlock>\r\n                </div>\r\n            </div>\r\n\r\n            {/* <div style={{ backgroundColor: '#fff' }}>\r\n                <ContentBlock>\r\n                    <div style={{ padding: '2em 0' }}>\r\n                        <TextBlock>\r\n                            <p>I periodically come back to make some digital art in a form of 3D renders or 2D digital paintings.</p>\r\n                            <p>isometric, progress gifs, grids (quads/hexes), models (penguin, elephant, rhino, pig, fish), colors</p>\r\n\r\n                            <div>\r\n                                <ImagesList>\r\n                                    {\r\n                                        images3d.map((imgPath, i) => {\r\n                                            return <li key={imgPath}><img src={`/images/3d/${imgPath}`} /></li>\r\n                                        })\r\n                                    }\r\n                                </ImagesList>\r\n                            </div>\r\n                        </TextBlock>\r\n                    </div>\r\n                </ContentBlock>\r\n            </div>\r\n\r\n            <div style={{ backgroundColor: '#bbb' }}>\r\n                <ContentBlock>\r\n                    <div style={{ padding: '2em 0' }}>\r\n                        <TextBlock>\r\n                            <p>These years I tend to spend more time creating in programming environments like game engines than in graphics editors.</p>\r\n                            <p>Besides 2d and 3d graphics, I also work on projects that often feature fair amount of procedural generation using either a game engine like Unity or JavaScript in the browser.</p>\r\n                            <p>I'm also interested in procedural generation which I tend to implement in Unity and then export and render in Blender.</p>\r\n\r\n                            <div>\r\n                                <ImagesList>\r\n                                    {\r\n                                        imagesProject.map((imgPath, i) => {\r\n                                            return <li key={i}><img src={`/images/projects/${imgPath}`} /></li>\r\n                                        })\r\n                                    }\r\n                                </ImagesList>\r\n                            </div>\r\n\r\n                            <p>I experiment with printing my procgen results.</p>\r\n\r\n                            <div>\r\n                                <ImagesList>\r\n                                    {\r\n                                        Array(8).fill(0).map((n, i) => {\r\n                                            return <li key={i}><img src={`https://source.unsplash.com/random/320x240?t=${i}`} /></li>\r\n                                        })\r\n                                    }\r\n                                </ImagesList>\r\n                            </div>\r\n                        </TextBlock>\r\n                    </div>\r\n                </ContentBlock>\r\n            </div>\r\n\r\n            <div style={{ backgroundColor: '#fff' }}>\r\n                <ContentBlock>\r\n                    <div style={{ padding: '2em 0' }}>\r\n                        <TextBlock>\r\n                            <p>I periodically come back to make some digital paintings.</p>\r\n                            <p>clouds, patterns, landscapes, characters, colors, less rigid, more flexible</p>\r\n\r\n                            <div>\r\n                                <ImagesList>\r\n                                    {\r\n                                        images2d.map((imgPath, i) => {\r\n                                            return <li key={imgPath}><img src={`/images/2d/${imgPath}`} /></li>\r\n                                        })\r\n                                    }\r\n                                </ImagesList>\r\n                            </div>\r\n\r\n                            <p>I share my digital art on <a href=\"https://www.artstation.com/lukaszgrolik\">ArtStation</a>, <a href=\"https://twitter.com/LukGallery\">Twitter</a>, <a href=\"https://imgur.com/user/lukg\">Imgur</a> and <a href=\"https://www.instagram.com/_lukg_/\">Instagram</a>.</p>\r\n                        </TextBlock>\r\n                    </div>\r\n                </ContentBlock>\r\n            </div>\r\n\r\n            <div style={{ backgroundColor: '#bbb' }}>\r\n                <ContentBlock>\r\n                    <div style={{ padding: '2em 0' }}>\r\n                        <TextBlock>\r\n                            <p>I like to visit green areas nearby and make photos of nature.</p>\r\n\r\n                            <div>\r\n                                <ImagesList>\r\n                                    {\r\n                                        photosNature.map((imgPath, i) => {\r\n                                            return <li key={imgPath}><img src={`/images/photos/nature/${imgPath}`} /></li>\r\n                                        })\r\n                                    }\r\n                                </ImagesList>\r\n                            </div>\r\n\r\n                            <p>I like to discover patterns and shapes ..</p>\r\n\r\n                            <div>\r\n                                <ImagesList>\r\n                                    {\r\n                                        photosPatterns.map((imgPath, i) => {\r\n                                            return <li key={imgPath}><img src={`/images/photos/patterns/${imgPath}`} /></li>\r\n                                        })\r\n                                    }\r\n                                </ImagesList>\r\n                            </div>\r\n\r\n                            <p>I like to create timelapses that show underlying processes.</p>\r\n\r\n                            <div>\r\n                                <ImagesList>\r\n                                    {\r\n                                        photosPatterns.map((imgPath, i) => {\r\n                                            return <li key={imgPath}><img src={`/images/photos/patterns/${imgPath}`} /></li>\r\n                                        })\r\n                                    }\r\n                                </ImagesList>\r\n                            </div>\r\n\r\n                            <p>I share my photos on <a href=\"https://twitter.com/LukGallery\">Twitter</a>, <a href=\"https://imgur.com/user/lukg\">Imgur</a> and <a href=\"https://www.instagram.com/_lukg_/\">Instagram</a>.</p>\r\n                        </TextBlock>\r\n                    </div>\r\n                </ContentBlock>\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\n","import * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link } from 'gatsby';\n\nimport { DefaultLayout } from '../components/layouts/default-layout';\nimport HomePageEditor from \"../components/pages/home-page/home-page-editor\";\nimport GraphicalArtsBlock from \"../components/pages/home-page/graphical-arts-block\";\nimport HelloBlock from \"../components/pages/home-page/hello-block\";\nimport GamedevBlock from \"../components/pages/home-page/gamedev-block\";\nimport PhotographyBlock from \"../components/pages/home-page/photography-block\";\n\nconst layoutWidth = 1280;\nconst layoutPadding = '1em';\nconst Wrapper = styled.div`\n    /* > * + * {\n        margin-top: 1em;\n    } */\n`;\n// @todo DRY\nconst ContentBlock = styled.div`\n    padding: 0 ${layoutPadding};\n    max-width: ${layoutWidth}px;\n    margin: 0 auto;\n`;\n\nexport default function Home() {\n    return <DefaultLayout>\n        <Wrapper>\n            <div style={{ backgroundColor: '#fff' }}>\n                <ContentBlock>\n                    <div style={{ padding: '3em 0' }}>\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\n                            <HelloBlock />\n                        </div>\n                    </div>\n                </ContentBlock>\n            </div>\n\n            <div>\n                {/* <div style={{border: '0 solid #000', borderWidth: '2em 0'}}> */}\n                <HomePageEditor\n                    extended={false}\n                    content={() => {\n                        return (\n                            <p>See <Link to=\"/webdev\">Webdev</Link> for more.</p>\n                        )\n                    }}\n                />\n                {/* </div> */}\n            </div>\n\n            {/* <div style={{backgroundColor: '#fff'}}>\n        <ContentBlock>\n          <div style={{padding: '2em 0'}}>\n            <TextBlock>\n              <p>My best motivation to learn new programming stuff is to leverage it within my personal projects. The prospect of utilizing technologies to bring my own vision to life is what keeps me going.</p>\n\n              <img src=\"/images/madfractal/devlog-6-thumbnail-bg.png\" alt=\"\" style={{width: 480, height: 270, float: 'right', marginLeft: '1em', marginBottom: '1em'}} />\n              <img src=\"/images/madfractal/devlog-5-thumbnail-bg.png\" alt=\"\" style={{width: 480, height: 270, float: 'right', clear: 'right', marginTop: 0, marginLeft: '1em', marginBottom: '1em'}} />\n              <p>My main side-project is a computer game called <strong>Madfractal</strong> which I've been working on since 2019 using the <strong>Unity</strong> engine. It's heavily inspired by the <strong>Diablo II</strong> game which I used to play a lot. I think the dark, gothic atmosphere of the game is what made me take a chance at implementing my own take on the action-RPG genre.</p>\n\n              <img src=\"/images/madfractal/devlog-5-thumbnail-bg.png\" alt=\"\" style={{width: 480, height: 270, float: 'left', marginRight: '1em', marginBottom: '1em'}} />\n              <p>You can visit <a href=\"https://madfractal.com\" target=\"__blank\">madfractal.com</a> and my gamedev Twitter channel <a href=\"https://twitter.com/LukGameDev\" target=\"__blank\">twitter.com/LukGameDev</a> for latest news.</p>\n            </TextBlock>\n          </div>\n        </ContentBlock>\n      </div> */}\n\n            {/* <div style={{backgroundColor: '#bbb'}}>\n        <ContentBlock>\n          <div style={{padding: '2em 0'}}>\n            <TextBlock>\n              <p>I have a YouTube channel where I mainly post devlogs for the game among other gamedev-related experiments, sometimes in a form of music-videos, and other stuff like a few web-dev videos.</p>\n            </TextBlock>\n          </div>\n        </ContentBlock>\n      </div> */}\n\n            <div style={{ marginTop: '2em' }}>\n                <ContentBlock>\n                    <GamedevBlock\n                        extended={false}\n                        content={() => {\n                            return (\n                                <p>See <Link to=\"/gamedev\">Gamedev</Link> for more.</p>\n                            )\n                        }}\n                    />\n                </ContentBlock>\n            </div>\n\n            <div style={{ marginTop: '2em' }}>\n                <ContentBlock>\n                    <GraphicalArtsBlock\n                        maxImages={4}\n                        content={() => {\n                            return (\n                                <p>See <Link to=\"/graphic-art\">Graphic Art</Link> for more.</p>\n                            )\n                        }}\n                    />\n                </ContentBlock>\n            </div>\n\n            <div style={{ marginTop: '2em', marginBottom: '2em' }}>\n                <ContentBlock>\n                    <PhotographyBlock\n                        maxImages={8}\n                        content={() => {\n                            return (\n                                <p>See <Link to=\"/photography\">Photography</Link> for more.</p>\n                            )\n                        }}\n                    />\n                </ContentBlock>\n            </div>\n        </Wrapper>\n    </DefaultLayout>\n}\n","import * as React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst layoutWidth = 1280;\r\nconst layoutPadding = '1em';\r\nconst ContentBlock = styled.div`\r\n    padding: 0 ${layoutPadding};\r\n    max-width: ${layoutWidth}px;\r\n    margin: 0 auto;\r\n`;\r\n// @todo DRY\r\nconst TextBlock = styled.div`\r\n    /* text-align: justify; */\r\n\r\n    &:after {\r\n        content: \".\";\r\n        visibility: hidden;\r\n        display: block;\r\n        height: 0;\r\n        clear: both;\r\n    }\r\n\r\n    > * + * {\r\n        margin-top: 1em;\r\n    }\r\n\r\n    p {\r\n        color: rgba(0, 0, 0, .5);\r\n        font-size: .6em;\r\n    }\r\n\r\n    a {\r\n        border-bottom: 1px solid;\r\n\r\n        &:hover {\r\n            color: #fff;\r\n            background-color: rgba(0, 0, 0, .5);\r\n        }\r\n    }\r\n\r\n    strong {\r\n        font-weight: bold;\r\n    }\r\n`;\r\nconst YouTubeVideoBlock = styled.div`\r\n    background-color: #eee;\r\n    margin-top: 1em;\r\n    line-height: 1;\r\n\r\n    iframe {\r\n        display: block;\r\n        margin: 0 auto;\r\n    }\r\n`;\r\nconst ImagesGrid = styled.div`\r\n    display: grid;\r\n    /* grid-template-rows: repeat(8, 5vw); */\r\n    /* grid-template-columns: repeat(4, 1fr); */\r\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n    grid-gap: 1em;\r\n\r\n    img {\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n        /* width: 350px;\r\n        height: 350px; */\r\n        object-fit: cover;\r\n    }\r\n`;\r\n\r\nconst ImagesGroupsList = styled.ul`\r\n    > * + * {\r\n        margin-top: 2em;\r\n    }\r\n`;\r\nconst ImagesBlockWrapper = styled.div`\r\n    > * + * {\r\n        margin-top: 1em;\r\n    }\r\n`;\r\nconst VideoBlock = styled.div`\r\n    background-color: #eee;\r\n\r\n    video {\r\n        max-width: 640px;\r\n        margin: 0 auto;\r\n        display: block;\r\n    }\r\n`;\r\nconst ImagesBlockHeader = styled.h3`\r\n    color: rgba(0, 0, 0, .5);\r\n    font-size: .75em;\r\n    line-height: 1;\r\n    padding-bottom: .25em;\r\n    border-bottom: 1px solid rgba(0, 0, 0, .1);\r\n`;\r\nconst ContentWrapper = styled.div`\r\n    color: rgba(0, 0, 0, .5);\r\n    font-size: .6em;\r\n    /* line-height: 1; */\r\n\r\n    p {\r\n        line-height: 1.5;\r\n    }\r\n\r\n    a {\r\n        border-bottom: 1px solid;\r\n\r\n        &:hover {\r\n            color: #fff;\r\n            background-color: rgba(0, 0, 0, .5);\r\n        }\r\n    }\r\n\r\n    strong {\r\n        font-weight: bold;\r\n    }\r\n\r\n    > * + * {\r\n        margin-top: .5em;\r\n    }\r\n`;\r\n\r\nfunction ImagesBlock(props: {imageGroup: ImageGroup}) {\r\n    const {imageGroup} = props;\r\n\r\n    return (\r\n        <ImagesBlockWrapper>\r\n            <ImagesBlockHeader>{imageGroup.title}</ImagesBlockHeader>\r\n\r\n            {\r\n                imageGroup.Content\r\n                &&\r\n                <ContentWrapper>\r\n                    <imageGroup.Content />\r\n                </ContentWrapper>\r\n            }\r\n\r\n            {\r\n                imageGroup.gfycatId\r\n                &&\r\n                <VideoBlock>\r\n                    <video\r\n                        autoPlay={false}\r\n                        playsInline={false}\r\n                        preload=\"auto\"\r\n                        poster={`https://thumbs.gfycat.com/${imageGroup.gfycatId}-mobile.jpg`}\r\n                        tabIndex={-1}\r\n                        // width={1600}\r\n                        // height={900}\r\n                        controls={true}\r\n                    >\r\n                        <source src={`https://thumbs.gfycat.com/${imageGroup.gfycatId}-mobile.mp4`} type=\"video/mp4\" />\r\n                        <source src={`https://giant.gfycat.com/${imageGroup.gfycatId}.webm`} type=\"video/webm\" />\r\n                        <source src={`https://giant.gfycat.com/${imageGroup.gfycatId}.mp4`} type=\"video/mp4\" />\r\n                        <source src={`https://thumbs.gfycat.com/${imageGroup.gfycatId}-mobile.mp4`} type=\"video/mp4\" />\r\n                    </video>\r\n                </VideoBlock>\r\n            }\r\n\r\n            <ImagesGrid>\r\n                {\r\n                    imageGroup.paths.map((imgPath, i) => {\r\n                        return (\r\n                            <div key={imgPath}>\r\n                                <img\r\n                                    loading=\"lazy\"\r\n                                    src={`${imageGroup.basePath}${imgPath}`}\r\n                                    width={300}\r\n                                    height={300}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </ImagesGrid>\r\n        </ImagesBlockWrapper>\r\n    );\r\n}\r\n\r\nconst madfractalScreenshots = [\r\n    \"vlcsnap-2021-01-20-23h13m18s110_square.png\",\r\n    \"vlcsnap-2021-01-20-23h14m49s967_square.png\",\r\n    \"vlcsnap-2021-01-24-23h22m30s825_square.png\",\r\n    \"screenshot_3840x2160_2020-07-19_12-33-08_square.png\",\r\n    \"screenshot_3840x2160_2020-07-19_12-49-45_square.png\",\r\n    \"screenshot_3840x2160_2020-07-19_12-46-12_square.png\",\r\n    \"screenshot_3840x2160_2020-07-19_12-42-38_square.png\",\r\n    'church 2_square.png',\r\n    'devlog-6-thumbnail-bg_square.png',\r\n    'devlog-5-thumbnail-bg_square.png',\r\n    'devlog-2-thumbnail-bg_square.png',\r\n];\r\nconst economyRTSScreenshots = [\r\n    \"screenshot_2021-03-24_13-47-41_1920x1080_square.png\",\r\n    \"screenshot_2021-03-17_21-53-19_1920x1080_square.png\",\r\n    \"screenshot_2021-03-17_17-03-20_1920x1080_square.png\",\r\n    \"screenshot_2021-03-17_13-31-56_1920x1080_square.png\",\r\n];\r\nconst imagesProject = [\r\n    'city-builder_square.png',\r\n    // 'city-builder-timelapse.gif',\r\n    'forest at the beach 1 screen_2560x1440_2019-06-06_21-45-38_square.png',\r\n    'screenshot-2019-04-18-103128813_square.png',\r\n    'screenshot-2019-04-18-103424481_square.png',\r\n];\r\n\r\nconst imageGroups: ImageGroup[] = [\r\n    {\r\n        title: \"Madfractal\",\r\n        basePath: '/images/madfractal/',\r\n        paths: madfractalScreenshots,\r\n        // gfycatId: 'PessimisticSarcasticAnt',\r\n        gfycatId: 'ShamefulBlissfulIcelandichorse',\r\n        Content: () => {\r\n            return (\r\n                <>\r\n                    <p>My main side-project is a computer game called <strong>Madfractal</strong> which I've been working on since 2019 using the <strong>Unity</strong> engine. It's heavily inspired by the <strong>Diablo II</strong> game which I used to play a lot. I think the dark, gothic atmosphere of the game is what made me take a chance at implementing my own take on the action-RPG genre.</p>\r\n\r\n                    <p>You can visit <a href=\"https://madfractal.com\" target=\"__blank\">madfractal.com</a> and my gamedev Twitter channel <a href=\"https://twitter.com/LukGameDev\" target=\"__blank\">@LukGameDev</a> for latest news.</p>\r\n                </>\r\n            );\r\n        },\r\n    },\r\n    {\r\n        title: \"Untitled economy RTS game\",\r\n        basePath: '/images/economy-rts/',\r\n        paths: economyRTSScreenshots,\r\n        // gfycatId: 'PessimisticSarcasticAnt',\r\n        gfycatId: 'CautiousAllColt',\r\n        Content: () => {\r\n            return (\r\n                <>\r\n                    <p>I've also been working on an economy strategy game inspired by the late 1990s and early 2000s Sierra games like <strong>Caesar</strong>, <strong>Pharaoh</strong> and <strong>Zeus</strong>, using hand-drawn graphics style.</p>\r\n                </>\r\n            );\r\n        },\r\n    },\r\n    {\r\n        title: \"Unity side-projects & experiments\",\r\n        basePath: '/images/projects/',\r\n        paths: imagesProject,\r\n    },\r\n];\r\n\r\ninterface ImageGroup {\r\n    title: string;\r\n    basePath: string;\r\n    paths: string[];\r\n    gfycatId?: string;\r\n    Content?: () => JSX.Element;\r\n}\r\n\r\nexport default function GamedevBlock(props: { extended: boolean; content?: React.FC }) {\r\n    const { content: Content } = props;\r\n\r\n    return (\r\n        <div>\r\n            <div style={{  }}>\r\n                <TextBlock>\r\n                    <h2>Gamedev</h2>\r\n\r\n                    <p>I have a <a href=\"https://www.youtube.com/channel/UCD4zBy-bxuTdt3UUMowjcaA\">YouTube channel</a> where I mainly post devlogs among other gamedev-related experiments.</p>\r\n                </TextBlock>\r\n\r\n                <YouTubeVideoBlock>\r\n                    <iframe\r\n                        width=\"560\"\r\n                        height=\"315\"\r\n                        src=\"https://www.youtube-nocookie.com/embed/wPkDTSG733Y\"\r\n                        frameBorder=\"0\"\r\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                        allowFullScreen\r\n                    ></iframe>\r\n                </YouTubeVideoBlock>\r\n\r\n                {\r\n                    Content\r\n                    &&\r\n                    <TextBlock style={{ marginTop: '1em' }}>\r\n                        <Content />\r\n                    </TextBlock>\r\n                }\r\n\r\n                {\r\n                    props.extended\r\n                    &&\r\n                    <>\r\n                        <div style={{ marginTop: '2em' }}>\r\n                            <ImagesGroupsList>\r\n                                {\r\n                                    imageGroups.map(imageGroup => {\r\n                                        return (\r\n                                            <li key={imageGroup.title}>\r\n                                                <ImagesBlock imageGroup={imageGroup} />\r\n                                            </li>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </ImagesGroupsList>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"sourceRoot":""}