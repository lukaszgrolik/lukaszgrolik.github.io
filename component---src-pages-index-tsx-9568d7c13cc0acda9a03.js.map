{"version":3,"sources":["webpack:///./src/components/pages/home-page/home-page-editor.tsx","webpack:///./src/components/pages/home-page/graphical-arts-block.tsx","webpack:///./src/components/icons.tsx","webpack:///./src/components/pages/home-page/hello-block.tsx","webpack:///./src/components/pages/home-page/gamedev-block.tsx","webpack:///./src/components/pages/home-page/photography-block.tsx","webpack:///./src/pages/index.tsx"],"names":["ImageBackgroundWrapper","styled","div","ImageBackgroundBlock","ContentBlock","TextBlock","WebdevBlock","ConsoleTopPanel","ConsoleButton","ConsoleMinimize","ConsoleMaximize","ConsoleClose","ConsoleBody","CodeTypeScript","strong","CodeReact","CodeMobX","CodeStyled","CodeWebpack","CodeElectron","CodeGatsby","CodeRedux","CodeAngular","CodeGrunt","CodeGulp","CodeJquery","CodeSass","CodeBower","CodeGraph","CodeFlutter","CodeWasm","CodeRust","CodeNode","CodeMongo","CodeMySQL1","span","CodeMySQL2","CodeDocker","Emphasis","em","HomePageEditor","style","backgroundImage","padding","ImagesGrid","ul","ImagesBlockWrapper","VideoBlock","ImagesBlockHeader","h3","ImagesBlock","props","imageGroup","title","gfycatId","autoPlay","playsInline","preload","poster","tabIndex","controls","src","type","paths","map","imgPath","i","key","loading","basePath","width","height","imageGroups","GraphicalArtsBlock","backgroundColor","Discord","role","viewBox","xmlns","d","GitHub","Instagram","Twitter","YouTube","Wrapper","PhotoBlock","InfoBlock","TopInfo","SocialIconsList","HelloBlock","social","name","Icon","Icons","color","url","icon","href","YouTubeVideoBlock","ImagesGroupsList","ContentWrapper","Content","target","GamedevBlock","frameBorder","allow","allowFullScreen","marginTop","PhotographyBlock","Footer","Home","React","email","setEmail","join","replace","display","justifyContent","fontSize"],"mappings":"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","file":"component---src-pages-index-tsx-9568d7c13cc0acda9a03.js","sourcesContent":["import * as React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport * as Icons from '../../icons';\r\n\r\nconst layoutWidth = 1280;\r\nconst layoutPadding = '1em';\r\n\r\nconst ImageBackgroundWrapper = styled.div`\r\n  position: relative;\r\n  overflow: hidden;\r\n`;\r\nconst ImageBackgroundBlock = styled.div`\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-attachment: fixed;\r\n  /* filter: blur(3px); */\r\n  /* transform: scale(1.01); */\r\n  position: absolute;\r\n  z-index: 1;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst ContentBlock = styled.div`\r\n  padding: 0 ${layoutPadding};\r\n  max-width: ${layoutWidth}px;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  z-index: 2;\r\n`;\r\nconst TextBlock = styled.div`\r\n  /* text-align: justify; */\r\n\r\n  &:after {\r\n    content: \".\";\r\n    visibility: hidden;\r\n    display: block;\r\n    height: 0;\r\n    clear: both;\r\n  }\r\n\r\n  > * + * {\r\n    margin-top: 1em;\r\n  }\r\n\r\n  a {\r\n    border-bottom: 5px dotted;\r\n\r\n    &:hover {\r\n      border-bottom-style: solid;\r\n    }\r\n  }\r\n\r\n  strong {\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst WebdevBlock = styled.div`\r\n  color: rgba(255, 255, 255, .9);\r\n  /* font-family: monospace; */\r\n  font-family: 'Inconsolata', monospace;\r\n  line-height: 1.25;\r\n  box-shadow: 0 0 2em rgba(0, 0, 0, .5);\r\n`;\r\nconst ConsoleTopPanel = styled.div`\r\n  background-color: rgba(0, 0, 0, .66);\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  padding: .5em;\r\n  margin-bottom: 1px;\r\n\r\n  > * + * {\r\n    margin-left: .5em;\r\n  }\r\n`;\r\nconst ConsoleButton = styled.div`\r\n  background-color: rgba(255, 255, 255, .25);\r\n  width: 1em;\r\n  height: 1em;\r\n`;\r\nconst ConsoleMinimize = styled(ConsoleButton)`\r\n  height: .25em;\r\n  margin-top: .75em;\r\n`;\r\nconst ConsoleMaximize = styled(ConsoleButton)`\r\n`;\r\nconst ConsoleClose = styled(ConsoleButton)`\r\n  background-color: hsla(0, 50%, 50%, .25);\r\n  border-radius: 100%;\r\n`;\r\nconst ConsoleBody = styled.div`\r\n  background-color: rgba(0, 0, 0, .66);\r\n  padding: 2em;\r\n`;\r\n\r\nconst CodeTypeScript = styled.strong`background-color: #294e80; color: #fff;`;\r\nconst CodeReact = styled.strong`background-color: #282c34; color: #61dafb;`;\r\nconst CodeMobX = styled.strong`background-color: #de5c10; color: #fff;`;\r\nconst CodeStyled = styled.strong`color: #C865B9;`;\r\nconst CodeWebpack = styled.strong`background-color: #2b3a42; color: #fff;`;\r\n\r\nconst CodeElectron = styled.strong`background-color: #272a38; color: #aaebfa;`;\r\nconst CodeGatsby = styled.strong`background-color: #663399; color: #fff;`;\r\n\r\nconst CodeRedux = styled.strong`background-color: #764abc; color: #fff;`;\r\nconst CodeAngular = styled.strong`background-color: #c3002f; color: #fff;`;\r\nconst CodeGrunt = styled.strong`background-color: #e48632; color: #453015;`;\r\nconst CodeGulp = styled.strong`background-color: #cf4647; color: #fff;`;\r\nconst CodeJquery = styled.strong`color: #0769ad;`;\r\nconst CodeSass = styled.strong`color: #c8679b;`;\r\nconst CodeBower = styled.strong`background-color: #ffcc2f; color: #ef5734;`;\r\n\r\nconst CodeGraph = styled.strong`color: #e535ab;`;\r\nconst CodeFlutter = styled.strong`color: #5fc6fd;`;\r\nconst CodeWasm = styled.strong`background-color: #6750f4; color: #fff;`;\r\nconst CodeRust = styled.strong`background-color: #fff; color: #000;`;\r\n\r\nconst CodeNode = styled.strong`background-color: #43853d; color: #fff;`;\r\nconst CodeMongo = styled.strong`background-color: #13aa52; color: #fff;`;\r\nconst CodeMySQL1 = styled.span`color: #00758f;`;\r\nconst CodeMySQL2 = styled.span`color: #f29111;`;\r\nconst CodeDocker = styled.strong`color: #2496ed;`;\r\n\r\nconst Emphasis = styled.em`text-decoration: underline;`;\r\n\r\nexport default function HomePageEditor() {\r\n    return (\r\n        <div>\r\n            <ImageBackgroundWrapper>\r\n                <ImageBackgroundBlock style={{ backgroundImage: 'url(/images/editor2.png)' }} />\r\n\r\n                <ContentBlock>\r\n                    <div style={{ padding: '3em 0' }}>\r\n                        <WebdevBlock>\r\n                            <ConsoleTopPanel>\r\n                                <ConsoleMinimize />\r\n                                <ConsoleMaximize />\r\n                                <ConsoleClose />\r\n                            </ConsoleTopPanel>\r\n\r\n                            <ConsoleBody>\r\n                                <TextBlock>\r\n                                    <p>I've been working with web apps for a living for a few years now.</p>\r\n\r\n                                    <p>My battle-tested front-end stack of choice has been <CodeTypeScript>TypeScript</CodeTypeScript> as a statically-typed alternative to JavaScript, <CodeReact>React</CodeReact> for structuring content (templates/components), <CodeMobX>MobX</CodeMobX> for state management and <CodeStyled>styled-components</CodeStyled> for CSS, all bundled with <CodeWebpack>Webpack</CodeWebpack>.</p>\r\n\r\n                                    <p>I've also built desktop apps with <CodeElectron>Electron</CodeElectron> and static websites with <CodeGatsby>Gatsby</CodeGatsby>.</p>\r\n\r\n                                    <p>On the server-side I've dabbled with <CodeNode>NodeJS</CodeNode> (Express, Hapi), <CodeMongo>MongoDB</CodeMongo>, <strong><CodeMySQL1>My</CodeMySQL1><CodeMySQL2>SQL</CodeMySQL2></strong> and tools like <CodeDocker>Docker</CodeDocker>.</p>\r\n\r\n                                    <p>I used to work with React &amp; <CodeRedux>Redux</CodeRedux>, the first version of <CodeAngular>Angular</CodeAngular> and tools like <CodeGrunt>Grunt</CodeGrunt> and <CodeGulp>Gulp</CodeGulp>. I remember the old days when layouts were built using floats instead of <Emphasis>flexbox</Emphasis> and <Emphasis>grid</Emphasis>, when <CodeJquery>jQuery</CodeJquery> and <CodeSass>Sass</CodeSass> were in standard use over vanilla JS and CSS, and when <CodeBower>Bower</CodeBower> became a rescue from managing libraries manually.</p>\r\n\r\n                                    <p>Nowadays I try to get to know <CodeGraph>GraphQL</CodeGraph> and <CodeFlutter>Flutter</CodeFlutter>. I also experiment with <CodeWasm>WebAssembly</CodeWasm> using <CodeRust>Rust</CodeRust>.</p>\r\n                                </TextBlock>\r\n                            </ConsoleBody>\r\n                        </WebdevBlock>\r\n                    </div>\r\n                </ContentBlock>\r\n            </ImageBackgroundWrapper>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst layoutWidth = 1280;\r\nconst layoutPadding = '1em';\r\nconst ContentBlock = styled.div`\r\n  padding: 0 ${layoutPadding};\r\n  max-width: ${layoutWidth}px;\r\n  margin: 0 auto;\r\n`;\r\nconst TextBlock = styled.div`\r\n  /* text-align: justify; */\r\n\r\n  &:after {\r\n    content: \".\";\r\n    visibility: hidden;\r\n    display: block;\r\n    height: 0;\r\n    clear: both;\r\n  }\r\n\r\n  > * + * {\r\n    margin-top: 1em;\r\n  }\r\n\r\n  a {\r\n    border-bottom: 5px dotted;\r\n\r\n    &:hover {\r\n      border-bottom-style: solid;\r\n    }\r\n  }\r\n\r\n  strong {\r\n    font-weight: bold;\r\n  }\r\n`;\r\nconst imagesListSpacing = '.5em';\r\nconst imagesColumns = 4;\r\nconst ImagesList = styled.ul`\r\n  line-height: 1;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin: -${imagesListSpacing} -${imagesListSpacing} 0 0;\r\n\r\n  > li {\r\n    margin: ${imagesListSpacing} ${imagesListSpacing} 0 0;\r\n    /* width: calc((${layoutWidth}px - 2 * ${layoutPadding} - ((${imagesColumns} - 1) * ${imagesListSpacing})) / ${imagesColumns}); */\r\n  }\r\n\r\n  img {\r\n    display: block;\r\n    width: 100%;\r\n    max-height: 200px;\r\n    transition: transform .2s;\r\n    box-shadow: 3px 3px 10px rgba(0, 0, 0, .25);\r\n\r\n    &:hover {\r\n      transform: scale(1.1);\r\n    }\r\n  }\r\n`;\r\nconst ImagesList2 = styled.ul`\r\n  line-height: 1;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  /* justify-content: center; */\r\n  margin: -${imagesListSpacing} -${imagesListSpacing} 0 0;\r\n\r\n  > li {\r\n    margin: ${imagesListSpacing} ${imagesListSpacing} 0 0;\r\n    /* width: calc((${layoutWidth}px - 2 * ${layoutPadding} - ((${imagesColumns} - 1) * ${imagesListSpacing})) / ${imagesColumns}); */\r\n\r\n  }\r\n\r\n  img {\r\n    display: block;\r\n    /* width: 100%; */\r\n    /* height: 100%; */\r\n    width: 200px;\r\n    height: 200px;\r\n    object-fit: cover;\r\n    /* transition: transform .2s; */\r\n    /* box-shadow: 3px 3px 10px rgba(0, 0, 0, .25); */\r\n\r\n    &:hover {\r\n      /* transform: scale(1.1); */\r\n    }\r\n  }\r\n`;\r\nconst ImagesGrid = styled.div`\r\n    display: grid;\r\n    /* grid-template-rows: repeat(8, 5vw); */\r\n    /* grid-template-columns: repeat(4, 1fr); */\r\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n    grid-gap: 1em;\r\n\r\n    img {\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n        /* width: 350px;\r\n        height: 350px; */\r\n        object-fit: cover;\r\n    }\r\n`;\r\n\r\nconst images3d = [\r\n    'clownfish_1_square.png',\r\n    // 'mineral_cube.gif',\r\n    // 'planet.gif',\r\n    'small_grid13_square.png',\r\n    'crystals14_square.png',\r\n    'mineral cube collage 3_square.png',\r\n    'pig hex_pigs_7_square.png',\r\n    'planet hns game assets 2 v9 1024x1024_square.png',\r\n    'low poly penguin 2 v11_square.png',\r\n    'rhino scene 9_square.png',\r\n    'low-poly4-hires_square.png',\r\n];\r\nconst images2d = [\r\n    \"planet-4_square.png\",\r\n    \"planet-6_square.png\",\r\n    \"planet-8_square.png\",\r\n    \"trees-showoff_square.png\",\r\n    \"sheep Screenshot (147)_square.png\",\r\n    // \"sheep Screenshot (142)_square.png\",\r\n    \"sheep Screenshot (140)_square.png\",\r\n    // \"sheep Screenshot (144)_square.png\",\r\n    \"sheep Screenshot (145)_square.png\",\r\n    \"sheep Screenshot (146)_square.png\",\r\n    'characters-collage_square.png',\r\n    '2d-scenes-collage_square.jpg',\r\n    'clouds-collage_square.jpg',\r\n    'patterns-collage_square.jpg',\r\n    '2018-06-07 meteor_square.png',\r\n    'clouds2_square.png',\r\n    'clouds_square.png',\r\n    'nebulas_square.png',\r\n    'pokemon DSC_0002_edit1_square.JPG',\r\n    'pokemon DSC_0001_edit1_square.JPG',\r\n];\r\nconst imagesProcgen = [\r\n    'screenshot_3840x2160_2020-02-22_18-32-43_square.png',\r\n    'screenshot_3840x2160_2020-02-22_20-05-41_square.png',\r\n    'screenshot_3840x2160_2020-02-22_19-43-51_square.png',\r\n    'procgen-patterns-collage-3_square.png',\r\n    'procgen-patterns-collage-2_square.png',\r\n    'procgen-patterns-collage-1_square.png',\r\n    'terrains-collage-2_square.png',\r\n    'terrains-collage-1_square.png',\r\n];\r\n\r\nconst ImagesBlockWrapper = styled.div`\r\n    > * + * {\r\n        margin-top: 1em;\r\n    }\r\n`;\r\nconst VideoBlock = styled.div`\r\n    background-color: #eee;\r\n\r\n    video {\r\n        max-width: 640px;\r\n        margin: 0 auto;\r\n        display: block;\r\n    }\r\n`;\r\nconst ImagesBlockHeader = styled.h3`\r\n    color: rgba(0, 0, 0, .5);\r\n    font-size: .75em;\r\n    line-height: 1;\r\n    padding-bottom: .25em;\r\n    border-bottom: 1px solid rgba(0, 0, 0, .2);\r\n    margin-bottom: 1em;\r\n`;\r\n\r\nfunction ImagesBlock(props: {imageGroup: ImageGroup}) {\r\n    const {imageGroup} = props;\r\n\r\n    return (\r\n        <ImagesBlockWrapper>\r\n            <ImagesBlockHeader>{imageGroup.title}</ImagesBlockHeader>\r\n\r\n            {\r\n                imageGroup.gfycatId\r\n                &&\r\n                <VideoBlock>\r\n                    <video\r\n                        autoPlay={false}\r\n                        playsInline={false}\r\n                        preload=\"auto\"\r\n                        poster={`https://thumbs.gfycat.com/${imageGroup.gfycatId}-mobile.jpg`}\r\n                        tabIndex={-1}\r\n                        // width={1600}\r\n                        // height={900}\r\n                        controls={true}\r\n                    >\r\n                        <source src={`https://thumbs.gfycat.com/${imageGroup.gfycatId}-mobile.mp4`} type=\"video/mp4\" />\r\n                        <source src={`https://giant.gfycat.com/${imageGroup.gfycatId}.webm`} type=\"video/webm\" />\r\n                        <source src={`https://giant.gfycat.com/${imageGroup.gfycatId}.mp4`} type=\"video/mp4\" />\r\n                        <source src={`https://thumbs.gfycat.com/${imageGroup.gfycatId}-mobile.mp4`} type=\"video/mp4\" />\r\n                    </video>\r\n                </VideoBlock>\r\n            }\r\n\r\n            <ImagesGrid>\r\n                {\r\n                    imageGroup.paths.map((imgPath, i) => {\r\n                        return (\r\n                            <div key={imgPath}>\r\n                                <img\r\n                                    loading=\"lazy\"\r\n                                    src={`${imageGroup.basePath}${imgPath}`}\r\n                                    width={300}\r\n                                    height={300}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </ImagesGrid>\r\n        </ImagesBlockWrapper>\r\n    );\r\n}\r\n\r\ninterface ImageGroup {\r\n    title: string;\r\n    basePath: string;\r\n    paths: string[];\r\n    gfycatId?: string;\r\n    Content?: () => JSX.Element;\r\n}\r\n\r\nconst imageGroups: ImageGroup[] = [\r\n    {\r\n        title: \"3D (Blender)\",\r\n        basePath: '/images/3d/',\r\n        paths: images3d,\r\n    },\r\n    {\r\n        title: \"Drawing & painting\",\r\n        basePath: '/images/2d/',\r\n        paths: images2d,\r\n    },\r\n    {\r\n        title: \"Procedural generation\",\r\n        basePath: '/images/projects/',\r\n        gfycatId: 'DiligentDaringHairstreakbutterfly',\r\n        paths: imagesProcgen,\r\n    },\r\n];\r\n\r\nexport default function GraphicalArtsBlock() {\r\n    return (\r\n        <div>\r\n            <div style={{ backgroundColor: '#fff' }}>\r\n                <ContentBlock>\r\n                    <div style={{ padding: '2em 0' }}>\r\n                        <TextBlock>\r\n                            <h2>Graphic art</h2>\r\n\r\n                            {\r\n                                imageGroups.map(imageGroup => {\r\n                                    return (\r\n                                        <ImagesBlock\r\n                                            key={imageGroup.title}\r\n                                            imageGroup={imageGroup}\r\n                                        />\r\n                                    );\r\n                                })\r\n                            }\r\n                        </TextBlock>\r\n                    </div>\r\n                </ContentBlock>\r\n            </div>\r\n\r\n            {/* <div style={{ backgroundColor: '#fff' }}>\r\n                <ContentBlock>\r\n                    <div style={{ padding: '2em 0' }}>\r\n                        <TextBlock>\r\n                            <p>I periodically come back to make some digital art in a form of 3D renders or 2D digital paintings.</p>\r\n                            <p>isometric, progress gifs, grids (quads/hexes), models (penguin, elephant, rhino, pig, fish), colors</p>\r\n\r\n                            <div>\r\n                                <ImagesList>\r\n                                    {\r\n                                        images3d.map((imgPath, i) => {\r\n                                            return <li key={imgPath}><img src={`/images/3d/${imgPath}`} /></li>\r\n                                        })\r\n                                    }\r\n                                </ImagesList>\r\n                            </div>\r\n                        </TextBlock>\r\n                    </div>\r\n                </ContentBlock>\r\n            </div>\r\n\r\n            <div style={{ backgroundColor: '#bbb' }}>\r\n                <ContentBlock>\r\n                    <div style={{ padding: '2em 0' }}>\r\n                        <TextBlock>\r\n                            <p>These years I tend to spend more time creating in programming environments like game engines than in graphics editors.</p>\r\n                            <p>Besides 2d and 3d graphics, I also work on projects that often feature fair amount of procedural generation using either a game engine like Unity or JavaScript in the browser.</p>\r\n                            <p>I'm also interested in procedural generation which I tend to implement in Unity and then export and render in Blender.</p>\r\n\r\n                            <div>\r\n                                <ImagesList>\r\n                                    {\r\n                                        imagesProject.map((imgPath, i) => {\r\n                                            return <li key={i}><img src={`/images/projects/${imgPath}`} /></li>\r\n                                        })\r\n                                    }\r\n                                </ImagesList>\r\n                            </div>\r\n\r\n                            <p>I experiment with printing my procgen results.</p>\r\n\r\n                            <div>\r\n                                <ImagesList>\r\n                                    {\r\n                                        Array(8).fill(0).map((n, i) => {\r\n                                            return <li key={i}><img src={`https://source.unsplash.com/random/320x240?t=${i}`} /></li>\r\n                                        })\r\n                                    }\r\n                                </ImagesList>\r\n                            </div>\r\n                        </TextBlock>\r\n                    </div>\r\n                </ContentBlock>\r\n            </div>\r\n\r\n            <div style={{ backgroundColor: '#fff' }}>\r\n                <ContentBlock>\r\n                    <div style={{ padding: '2em 0' }}>\r\n                        <TextBlock>\r\n                            <p>I periodically come back to make some digital paintings.</p>\r\n                            <p>clouds, patterns, landscapes, characters, colors, less rigid, more flexible</p>\r\n\r\n                            <div>\r\n                                <ImagesList>\r\n                                    {\r\n                                        images2d.map((imgPath, i) => {\r\n                                            return <li key={imgPath}><img src={`/images/2d/${imgPath}`} /></li>\r\n                                        })\r\n                                    }\r\n                                </ImagesList>\r\n                            </div>\r\n\r\n                            <p>I share my digital art on <a href=\"https://www.artstation.com/lukaszgrolik\">ArtStation</a>, <a href=\"https://twitter.com/LukGallery\">Twitter</a>, <a href=\"https://imgur.com/user/lukg\">Imgur</a> and <a href=\"https://www.instagram.com/_lukg_/\">Instagram</a>.</p>\r\n                        </TextBlock>\r\n                    </div>\r\n                </ContentBlock>\r\n            </div>\r\n\r\n            <div style={{ backgroundColor: '#bbb' }}>\r\n                <ContentBlock>\r\n                    <div style={{ padding: '2em 0' }}>\r\n                        <TextBlock>\r\n                            <p>I like to visit green areas nearby and make photos of nature.</p>\r\n\r\n                            <div>\r\n                                <ImagesList>\r\n                                    {\r\n                                        photosNature.map((imgPath, i) => {\r\n                                            return <li key={imgPath}><img src={`/images/photos/nature/${imgPath}`} /></li>\r\n                                        })\r\n                                    }\r\n                                </ImagesList>\r\n                            </div>\r\n\r\n                            <p>I like to discover patterns and shapes ..</p>\r\n\r\n                            <div>\r\n                                <ImagesList>\r\n                                    {\r\n                                        photosPatterns.map((imgPath, i) => {\r\n                                            return <li key={imgPath}><img src={`/images/photos/patterns/${imgPath}`} /></li>\r\n                                        })\r\n                                    }\r\n                                </ImagesList>\r\n                            </div>\r\n\r\n                            <p>I like to create timelapses that show underlying processes.</p>\r\n\r\n                            <div>\r\n                                <ImagesList>\r\n                                    {\r\n                                        photosPatterns.map((imgPath, i) => {\r\n                                            return <li key={imgPath}><img src={`/images/photos/patterns/${imgPath}`} /></li>\r\n                                        })\r\n                                    }\r\n                                </ImagesList>\r\n                            </div>\r\n\r\n                            <p>I share my photos on <a href=\"https://twitter.com/LukGallery\">Twitter</a>, <a href=\"https://imgur.com/user/lukg\">Imgur</a> and <a href=\"https://www.instagram.com/_lukg_/\">Instagram</a>.</p>\r\n                        </TextBlock>\r\n                    </div>\r\n                </ContentBlock>\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\n","import * as React from \"react\";\r\n\r\n// https://simpleicons.org\r\n\r\n// #13AFF0\r\nexport function ArtStation() {\r\n    return (\r\n        <svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" style={{height: '2em'}}><path d=\"M0 17.723l2.027 3.505h.001a2.424 2.424 0 0 0 2.164 1.333h13.457l-2.792-4.838H0zm24 .025c0-.484-.143-.935-.388-1.314L15.728 2.728a2.424 2.424 0 0 0-2.142-1.289H9.419L21.598 22.54l1.92-3.325c.378-.637.482-.919.482-1.467zm-11.129-3.462L7.428 4.858l-5.444 9.428h10.887z\" /></svg>\r\n    );\r\n}\r\n\r\n\r\n// #7289DA\r\nexport function Discord() {\r\n    return (\r\n        <svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" style={{height: '2em'}}><path d=\"M20.222 0c1.406 0 2.54 1.137 2.607 2.475V24l-2.677-2.273-1.47-1.338-1.604-1.398.67 2.205H3.71c-1.402 0-2.54-1.065-2.54-2.476V2.48C1.17 1.142 2.31.003 3.715.003h16.5L20.222 0zm-6.118 5.683h-.03l-.202.2c2.073.6 3.076 1.537 3.076 1.537-1.336-.668-2.54-1.002-3.744-1.137-.87-.135-1.74-.064-2.475 0h-.2c-.47 0-1.47.2-2.81.735-.467.203-.735.336-.735.336s1.002-1.002 3.21-1.537l-.135-.135s-1.672-.064-3.477 1.27c0 0-1.805 3.144-1.805 7.02 0 0 1 1.74 3.743 1.806 0 0 .4-.533.805-1.002-1.54-.468-2.14-1.404-2.14-1.404s.134.066.335.2h.06c.03 0 .044.015.06.03v.006c.016.016.03.03.06.03.33.136.66.27.93.4.466.202 1.065.403 1.8.536.93.135 1.996.2 3.21 0 .6-.135 1.2-.267 1.8-.535.39-.2.87-.4 1.397-.737 0 0-.6.936-2.205 1.404.33.466.795 1 .795 1 2.744-.06 3.81-1.8 3.87-1.726 0-3.87-1.815-7.02-1.815-7.02-1.635-1.214-3.165-1.26-3.435-1.26l.056-.02zm.168 4.413c.703 0 1.27.6 1.27 1.335 0 .74-.57 1.34-1.27 1.34-.7 0-1.27-.6-1.27-1.334.002-.74.573-1.338 1.27-1.338zm-4.543 0c.7 0 1.266.6 1.266 1.335 0 .74-.57 1.34-1.27 1.34-.7 0-1.27-.6-1.27-1.334 0-.74.57-1.338 1.27-1.338z\" /></svg>\r\n    );\r\n}\r\n\r\n// #181717\r\nexport function GitHub() {\r\n    return (\r\n        <svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" style={{height: '2em'}}><path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\" /></svg>\r\n    );\r\n}\r\n\r\n// #1BB76E\r\nexport function Imgur() {\r\n    return (\r\n        <svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" style={{height: '2em'}}><path d=\"M21.147 3.043c-.002-.113-.069-.182-.189-.191a14.117 14.117 0 00-.51-.045l-.162-.01a21.998 21.998 0 00-1.085-.046l-.217-.005c-.172-.003-.35-.004-.532-.004l-.189-.001c-.295 0-.601.003-.919.01l-.106.003a55.86 55.86 0 00-.87.026l-.237.009c-.335.013-.676.029-1.027.049l-.012.001c-.357.021-.724.045-1.095.071l-.275.021c-.304.023-.609.048-.92.076l-.25.021c-.38.035-.766.074-1.156.115-.08.009-.161.019-.242.027-.319.035-.641.073-.965.113l-.33.042c-.403.051-.806.105-1.212.164a.547.547 0 00-.154.045.303.303 0 00-.097.074l-.003.002c-.045.055-.047.12.004.179.003.004.002.008.005.012l3.488 3.456-6.629 6.596c-.069.067-.068.165 0 .251.856 1.093 1.44 1.793 2.143 2.492.699.703 1.398 1.286 2.493 2.143a.216.216 0 00.132.051.167.167 0 00.119-.051l6.597-6.629 3.455 3.488a.143.143 0 00.101.047c.096 0 .187-.118.212-.292.746-5.141.882-10.051.634-12.31z M15.87 24l6.356-6.357.026-.026.156-.155-.006-.006a3.144 3.144 0 00.822-1.711c.804-5.53.903-10.591.654-12.952a2.904 2.904 0 00-.834-1.812 2.96 2.96 0 00-1.816-.855C20.458.042 19.476 0 18.318 0c-2.999 0-6.667.284-10.063.777a3.143 3.143 0 00-1.887.991L0 8.137V24H15.87zm1.528-6.707c-.151 0-.563.405-.563.613a.1.1 0 01-.099.1.1.1 0 01-.099-.1c0-.208-.411-.613-.563-.613a.1.1 0 01-.099-.1c0-.054.044-.098.099-.098.152 0 .563-.404.563-.614 0-.055.044-.098.099-.098.054 0 .099.043.099.098 0 .21.412.614.563.614a.1.1 0 010 .198zM5.4 7.045c.197 0 .735-.528.735-.801a.13.13 0 01.128-.129c.071 0 .128.058.128.129 0 .272.538.801.735.801.071 0 .128.057.128.128a.128.128 0 01-.128.128c-.197 0-.735.528-.735.801a.128.128 0 01-.128.128.128.128 0 01-.128-.128c0-.273-.538-.801-.735-.801a.128.128 0 010-.256zm-3.99 3.26c0-.065.057-.098.119-.118.69-.228 1.269-.8 1.403-1.554.011-.064.053-.118.118-.118.066 0 .107.054.119.118.133.754.711 1.326 1.401 1.554.062.02.118.053.118.118s-.056.098-.118.119c-.69.227-1.269.799-1.403 1.553-.011.064-.053.119-.119.119-.065 0-.106-.054-.118-.119-.134-.754-.713-1.326-1.403-1.553-.061-.022-.117-.054-.117-.119zm1.565 9.307c-.113 0-.42.302-.42.459 0 .04-.034.073-.074.073a.074.074 0 01-.074-.073c0-.157-.307-.459-.42-.459a.074.074 0 01-.074-.073c0-.039.034-.073.074-.073.113 0 .42-.302.42-.457 0-.042.033-.073.074-.073.04 0 .074.031.074.073 0 .155.307.457.42.457.04 0 .073.034.073.073a.073.073 0 01-.073.073zm.568-3.047c-.14 0-.521.375-.521.568a.092.092 0 11-.183 0c0-.193-.381-.568-.521-.568a.09.09 0 01-.091-.09c0-.051.041-.092.091-.092.14 0 .521-.375.521-.568a.09.09 0 01.092-.09.09.09 0 01.091.09c0 .193.381.568.521.568a.091.091 0 010 .182zm3.334 4.382c-.203 0-.758.546-.758.827 0 .073-.06.133-.132.133a.133.133 0 01-.133-.133c0-.281-.555-.827-.758-.827a.134.134 0 01-.133-.133c0-.073.059-.132.133-.132.204 0 .758-.545.758-.828 0-.071.06-.132.133-.132.073 0 .132.061.132.132 0 .283.555.828.758.828.074 0 .133.059.133.132a.133.133 0 01-.133.133zm1.922-.806c-1.086-.851-1.869-1.498-2.653-2.287-.789-.784-1.436-1.566-2.287-2.654-.626-.8-.566-1.897.144-2.607l.001-.001.002-.001L9.364 7.26 7.149 5.066l-.003-.003-.002-.003c-.52-.52-.7-1.27-.472-1.958.148-.447.464-.802.867-1.049a1.983 1.983 0 01.371-.19 2.1 2.1 0 01.468-.131c.005 0 .009-.003.014-.004C11.746 1.24 15.363.96 18.317.96h.002c1.125 0 2.072.041 2.818.121.469.046.903.249 1.228.576.328.331.525.767.562 1.237.243 2.311.144 7.253-.651 12.714-.001.01-.006.016-.007.025a2.258 2.258 0 01-.18.586c-.006.014-.01.028-.018.042-.333.699-1.001 1.163-1.771 1.163-.51 0-.992-.2-1.358-.567l-.003-.002-.004-.004-2.192-2.215-5.333 5.359-.001.002h-.001a1.94 1.94 0 01-1.378.573c-.44 0-.877-.151-1.231-.429zm2.576 2.09c-.139 0-.518.373-.518.566a.09.09 0 01-.091.09.09.09 0 01-.09-.09c0-.193-.379-.566-.519-.566a.09.09 0 110-.18c.139 0 .519-.373.519-.566a.09.09 0 01.09-.09c.05 0 .091.041.091.09 0 .193.379.566.518.566.05 0 .091.039.091.09s-.04.09-.091.09zm2.115-2.437c.248 0 .922-.662.922-1.003 0-.088.072-.161.161-.161.088 0 .161.073.161.161 0 .341.674 1.003.921 1.003.089 0 .161.073.161.161a.16.16 0 01-.161.161c-.247 0-.921.662-.921 1.005a.162.162 0 01-.161.162.162.162 0 01-.161-.162c0-.343-.674-1.005-.922-1.005a.161.161 0 010-.322z\" /></svg>\r\n    );\r\n}\r\n\r\n// #E4405F\r\nexport function Instagram() {\r\n    return (\r\n        <svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" style={{height: '2em'}}><path d=\"M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.899 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.899-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z\" /></svg>\r\n    );\r\n}\r\n\r\n// #1DA1F2\r\nexport function Twitter() {\r\n    return (\r\n        <svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" style={{height: '2em'}}><path d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\" /></svg>\r\n    );\r\n}\r\n\r\n// #FF0000\r\nexport function YouTube() {\r\n    return (\r\n        <svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" style={{height: '2em'}}><path d=\"M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z\" /></svg>\r\n    );\r\n}","import * as React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport * as Icons from '../../icons';\r\n\r\nconst widthBreakpoint = '1280px';\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    /* justify-content: center; */\r\n    align-items: center;\r\n\r\n    @media screen and (min-width: ${widthBreakpoint}) {\r\n        > * + * {\r\n            margin-left: 2em;\r\n        }\r\n    }\r\n\r\n    img {\r\n        border-radius: 100%;\r\n        display: block;\r\n        max-width: 200px;\r\n        max-height: 200px;\r\n    }\r\n`;\r\nconst PhotoBlock = styled.div`\r\n    display: none;\r\n\r\n    @media screen and (min-width: ${widthBreakpoint}) {\r\n        display: block;\r\n    }\r\n`;\r\nconst InfoBlock = styled.div`\r\n    > * + * {\r\n        margin-top: 1em;\r\n    }\r\n`;\r\nconst TopInfo = styled.div`\r\n    color: #aaa;\r\n    line-height: 1.5;\r\n`;\r\nconst SocialIconsList = styled.ul`\r\n    display: flex;\r\n    line-height: 1;\r\n\r\n    > * + * {\r\n        /* margin-left: 1em; */\r\n    }\r\n\r\n    a {\r\n        display: block;\r\n        padding: .5em;\r\n        transition: background-color .2s;\r\n\r\n        svg {\r\n            fill: rgba(0, 0, 0, .15);\r\n            display: block;\r\n            transition: fill .2s;\r\n        }\r\n\r\n        &:not(:hover) {\r\n            background-color: #fff !important;\r\n        }\r\n\r\n        &:hover {\r\n            svg {\r\n                fill: #fff;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function HelloBlock() {\r\n    const social = [\r\n        {\r\n            name: 'YouTube',\r\n            Icon: Icons.YouTube,\r\n            color: '#FF0000',\r\n            url: 'https://www.youtube.com/channel/UCD4zBy-bxuTdt3UUMowjcaA',\r\n        },\r\n        {\r\n            name: 'Twitter',\r\n            Icon: Icons.Twitter,\r\n            color: '#1DA1F2',\r\n            url: 'https://twitter.com/LukGameDev',\r\n        },\r\n        {\r\n            name: 'Discord',\r\n            Icon: Icons.Discord,\r\n            color: '#7289DA',\r\n            url: 'https://discord.gg/s536z5Y',\r\n        },\r\n        {\r\n            name: 'Instagram',\r\n            Icon: Icons.Instagram,\r\n            color: '#E4405F',\r\n            url: 'https://www.instagram.com/_lukg_/',\r\n        },\r\n        // {\r\n        //     name: 'Imgur',\r\n        //     Icon: Icons.Imgur,\r\n        //     color: '#1BB76E',\r\n        //     url: 'https://imgur.com/user/lukg',\r\n        // },\r\n        // {\r\n        //     name: 'ArtStation',\r\n        //     Icon: Icons.ArtStation,\r\n        //     color: '#13AFF0',\r\n        //     url: 'https://www.artstation.com/lukaszgrolik',\r\n        // },\r\n        {\r\n            name: 'GitHub',\r\n            Icon: Icons.GitHub,\r\n            color: '#181717',\r\n            url: 'https://github.com/lukaszgrolik',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Wrapper>\r\n            <PhotoBlock>\r\n                {/* <img src=\"https://source.unsplash.com/random/240x240\" /> */}\r\n                <img src=\"/images/photo_edit1_200x200.JPG\" />\r\n            </PhotoBlock>\r\n\r\n            <InfoBlock>\r\n                <TopInfo>\r\n                    <p>Hi, I'm Łukasz.</p>\r\n                    <p>I live in Katowice, Poland.</p>\r\n                    <p>I do programming, music and graphic art.</p>\r\n                </TopInfo>\r\n\r\n                <div>\r\n                    <SocialIconsList>\r\n                        {\r\n                            social.map(icon => {\r\n                                return (\r\n                                    <li key={icon.name}>\r\n                                        <a href={icon.url} title={icon.name} style={{backgroundColor: icon.color}}><icon.Icon /></a>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </SocialIconsList>\r\n                </div>\r\n            </InfoBlock>\r\n        </Wrapper>\r\n    );\r\n}\r\n","import * as React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst layoutWidth = 1280;\r\nconst layoutPadding = '1em';\r\nconst ContentBlock = styled.div`\r\n    padding: 0 ${layoutPadding};\r\n    max-width: ${layoutWidth}px;\r\n    margin: 0 auto;\r\n`;\r\nconst TextBlock = styled.div`\r\n    /* text-align: justify; */\r\n\r\n    &:after {\r\n        content: \".\";\r\n        visibility: hidden;\r\n        display: block;\r\n        height: 0;\r\n        clear: both;\r\n    }\r\n\r\n    > * + * {\r\n        margin-top: 1em;\r\n    }\r\n\r\n    p {\r\n        color: rgba(0, 0, 0, .5);\r\n        font-size: .6em;\r\n    }\r\n\r\n    a {\r\n        border-bottom: 1px solid;\r\n\r\n        &:hover {\r\n            color: #fff;\r\n            background-color: rgba(0, 0, 0, .5);\r\n        }\r\n    }\r\n\r\n    strong {\r\n        font-weight: bold;\r\n    }\r\n`;\r\nconst YouTubeVideoBlock = styled.div`\r\n    background-color: #eee;\r\n    margin-top: 1em;\r\n    line-height: 1;\r\n\r\n    iframe {\r\n        display: block;\r\n        margin: 0 auto;\r\n    }\r\n`;\r\nconst ImagesGrid = styled.div`\r\n    display: grid;\r\n    /* grid-template-rows: repeat(8, 5vw); */\r\n    /* grid-template-columns: repeat(4, 1fr); */\r\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n    grid-gap: 1em;\r\n\r\n    img {\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n        /* width: 350px;\r\n        height: 350px; */\r\n        object-fit: cover;\r\n    }\r\n`;\r\n\r\nconst ImagesGroupsList = styled.ul`\r\n    > * + * {\r\n        margin-top: 1em;\r\n    }\r\n`;\r\nconst ImagesBlockWrapper = styled.div`\r\n    > * + * {\r\n        margin-top: 1em;\r\n    }\r\n`;\r\nconst VideoBlock = styled.div`\r\n    background-color: #eee;\r\n\r\n    video {\r\n        max-width: 640px;\r\n        margin: 0 auto;\r\n        display: block;\r\n    }\r\n`;\r\nconst ImagesBlockHeader = styled.h3`\r\n    color: rgba(0, 0, 0, .5);\r\n    font-size: .75em;\r\n    line-height: 1;\r\n    padding-bottom: .25em;\r\n    border-bottom: 1px solid rgba(0, 0, 0, .2);\r\n`;\r\nconst ContentWrapper = styled.div`\r\n    color: rgba(0, 0, 0, .5);\r\n    font-size: .6em;\r\n    /* line-height: 1; */\r\n\r\n    a {\r\n        border-bottom: 1px solid;\r\n\r\n        &:hover {\r\n            color: #fff;\r\n            background-color: rgba(0, 0, 0, .5);\r\n        }\r\n    }\r\n\r\n    strong {\r\n        font-weight: bold;\r\n    }\r\n\r\n    > * + * {\r\n        margin-top: .5em;\r\n    }\r\n`;\r\n\r\nfunction ImagesBlock(props: {imageGroup: ImageGroup}) {\r\n    const {imageGroup} = props;\r\n\r\n    return (\r\n        <ImagesBlockWrapper>\r\n            <ImagesBlockHeader>{imageGroup.title}</ImagesBlockHeader>\r\n\r\n            {\r\n                imageGroup.Content\r\n                &&\r\n                <ContentWrapper>\r\n                    <imageGroup.Content />\r\n                </ContentWrapper>\r\n            }\r\n\r\n            {\r\n                imageGroup.gfycatId\r\n                &&\r\n                <VideoBlock>\r\n                    <video\r\n                        autoPlay={false}\r\n                        playsInline={false}\r\n                        preload=\"auto\"\r\n                        poster={`https://thumbs.gfycat.com/${imageGroup.gfycatId}-mobile.jpg`}\r\n                        tabIndex={-1}\r\n                        // width={1600}\r\n                        // height={900}\r\n                        controls={true}\r\n                    >\r\n                        <source src={`https://thumbs.gfycat.com/${imageGroup.gfycatId}-mobile.mp4`} type=\"video/mp4\" />\r\n                        <source src={`https://giant.gfycat.com/${imageGroup.gfycatId}.webm`} type=\"video/webm\" />\r\n                        <source src={`https://giant.gfycat.com/${imageGroup.gfycatId}.mp4`} type=\"video/mp4\" />\r\n                        <source src={`https://thumbs.gfycat.com/${imageGroup.gfycatId}-mobile.mp4`} type=\"video/mp4\" />\r\n                    </video>\r\n                </VideoBlock>\r\n            }\r\n\r\n            <ImagesGrid>\r\n                {\r\n                    imageGroup.paths.map((imgPath, i) => {\r\n                        return (\r\n                            <div key={imgPath}>\r\n                                <img\r\n                                    loading=\"lazy\"\r\n                                    src={`${imageGroup.basePath}${imgPath}`}\r\n                                    width={300}\r\n                                    height={300}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </ImagesGrid>\r\n        </ImagesBlockWrapper>\r\n    );\r\n}\r\n\r\nconst madfractalScreenshots = [\r\n    \"vlcsnap-2021-01-20-23h13m18s110_square.png\",\r\n    \"vlcsnap-2021-01-20-23h14m49s967_square.png\",\r\n    \"vlcsnap-2021-01-24-23h22m30s825_square.png\",\r\n    \"screenshot_3840x2160_2020-07-19_12-33-08_square.png\",\r\n    \"screenshot_3840x2160_2020-07-19_12-49-45_square.png\",\r\n    \"screenshot_3840x2160_2020-07-19_12-46-12_square.png\",\r\n    \"screenshot_3840x2160_2020-07-19_12-42-38_square.png\",\r\n    'church 2_square.png',\r\n    'devlog-6-thumbnail-bg_square.png',\r\n    'devlog-5-thumbnail-bg_square.png',\r\n    'devlog-2-thumbnail-bg_square.png',\r\n];\r\nconst economyRTSScreenshots = [\r\n    \"screenshot_2021-03-24_13-47-41_1920x1080_square.png\",\r\n    \"screenshot_2021-03-17_21-53-19_1920x1080_square.png\",\r\n    \"screenshot_2021-03-17_17-03-20_1920x1080_square.png\",\r\n    \"screenshot_2021-03-17_13-31-56_1920x1080_square.png\",\r\n];\r\nconst imagesProject = [\r\n    'city-builder_square.png',\r\n    // 'city-builder-timelapse.gif',\r\n    'forest at the beach 1 screen_2560x1440_2019-06-06_21-45-38_square.png',\r\n    'screenshot-2019-04-18-103128813_square.png',\r\n    'screenshot-2019-04-18-103424481_square.png',\r\n];\r\n\r\nconst imageGroups: ImageGroup[] = [\r\n    {\r\n        title: \"Madfractal\",\r\n        basePath: '/images/madfractal/',\r\n        paths: madfractalScreenshots,\r\n        // gfycatId: 'PessimisticSarcasticAnt',\r\n        gfycatId: 'ShamefulBlissfulIcelandichorse',\r\n        Content: () => {\r\n            return (\r\n                <>\r\n                    <p>My main side-project is a computer game called <strong>Madfractal</strong> which I've been working on since 2019 using the <strong>Unity</strong> engine. It's heavily inspired by the <strong>Diablo II</strong> game which I used to play a lot. I think the dark, gothic atmosphere of the game is what made me take a chance at implementing my own take on the action-RPG genre.</p>\r\n\r\n                    <p>You can visit <a href=\"https://madfractal.com\" target=\"__blank\">madfractal.com</a> and my gamedev Twitter channel <a href=\"https://twitter.com/LukGameDev\" target=\"__blank\">@LukGameDev</a> for latest news.</p>\r\n                </>\r\n            );\r\n        },\r\n    },\r\n    {\r\n        title: \"Untitled economy RTS game\",\r\n        basePath: '/images/economy-rts/',\r\n        paths: economyRTSScreenshots,\r\n        // gfycatId: 'PessimisticSarcasticAnt',\r\n        gfycatId: 'CautiousAllColt',\r\n        Content: () => {\r\n            return (\r\n                <>\r\n                    <p>I've also been working on an economy strategy game inspired by the late 1990s and early 2000s Sierra games like <strong>Caesar</strong>, <strong>Pharaoh</strong> and <strong>Zeus</strong>, using hand-drawn graphics style.</p>\r\n                </>\r\n            );\r\n        },\r\n    },\r\n    {\r\n        title: \"Unity side-projects & experiments\",\r\n        basePath: '/images/projects/',\r\n        paths: imagesProject,\r\n    },\r\n];\r\n\r\ninterface ImageGroup {\r\n    title: string;\r\n    basePath: string;\r\n    paths: string[];\r\n    gfycatId?: string;\r\n    Content?: () => JSX.Element;\r\n}\r\n\r\nexport default function GamedevBlock() {\r\n    return (\r\n        <div>\r\n            <div style={{ backgroundColor: '#fff' }}>\r\n                <ContentBlock>\r\n                    <div style={{ padding: '2em 0' }}>\r\n                        <TextBlock>\r\n                            <h2>Gamedev</h2>\r\n\r\n                            <p>I have a <a href=\"https://www.youtube.com/channel/UCD4zBy-bxuTdt3UUMowjcaA\">YouTube channel</a> where I mainly post devlogs among other gamedev-related experiments.</p>\r\n                        </TextBlock>\r\n\r\n                        <YouTubeVideoBlock>\r\n                            <iframe\r\n                                width=\"560\"\r\n                                height=\"315\"\r\n                                src=\"https://www.youtube-nocookie.com/embed/wPkDTSG733Y\"\r\n                                frameBorder=\"0\"\r\n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                allowFullScreen\r\n                            ></iframe>\r\n                        </YouTubeVideoBlock>\r\n\r\n                        <div style={{marginTop: '1em'}}>\r\n                            <ImagesGroupsList>\r\n                                {\r\n                                    imageGroups.map(imageGroup => {\r\n                                        return (\r\n                                            <li key={imageGroup.title}>\r\n                                                <ImagesBlock imageGroup={imageGroup} />\r\n                                            </li>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </ImagesGroupsList>\r\n                        </div>\r\n                    </div>\r\n                </ContentBlock>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst layoutWidth = 1280;\r\nconst layoutPadding = '1em';\r\nconst ContentBlock = styled.div`\r\n  padding: 0 ${layoutPadding};\r\n  max-width: ${layoutWidth}px;\r\n  margin: 0 auto;\r\n`;\r\nconst TextBlock = styled.div`\r\n  /* text-align: justify; */\r\n\r\n  &:after {\r\n    content: \".\";\r\n    visibility: hidden;\r\n    display: block;\r\n    height: 0;\r\n    clear: both;\r\n  }\r\n\r\n  > * + * {\r\n    margin-top: 1em;\r\n  }\r\n\r\n  a {\r\n    border-bottom: 5px dotted;\r\n\r\n    &:hover {\r\n      border-bottom-style: solid;\r\n    }\r\n  }\r\n\r\n  strong {\r\n    font-weight: bold;\r\n  }\r\n`;\r\nconst imagesListSpacing = '.5em';\r\nconst imagesColumns = 4;\r\nconst ImagesList = styled.ul`\r\n  line-height: 1;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin: -${imagesListSpacing} -${imagesListSpacing} 0 0;\r\n\r\n  > li {\r\n    margin: ${imagesListSpacing} ${imagesListSpacing} 0 0;\r\n    /* width: calc((${layoutWidth}px - 2 * ${layoutPadding} - ((${imagesColumns} - 1) * ${imagesListSpacing})) / ${imagesColumns}); */\r\n  }\r\n\r\n  img {\r\n    display: block;\r\n    width: 100%;\r\n    max-height: 200px;\r\n    transition: transform .2s;\r\n    box-shadow: 3px 3px 10px rgba(0, 0, 0, .25);\r\n\r\n    &:hover {\r\n      transform: scale(1.1);\r\n    }\r\n  }\r\n`;\r\nconst ImagesList2 = styled.ul`\r\n  line-height: 1;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  /* justify-content: center; */\r\n  margin: -${imagesListSpacing} -${imagesListSpacing} 0 0;\r\n\r\n  > li {\r\n    margin: ${imagesListSpacing} ${imagesListSpacing} 0 0;\r\n    /* width: calc((${layoutWidth}px - 2 * ${layoutPadding} - ((${imagesColumns} - 1) * ${imagesListSpacing})) / ${imagesColumns}); */\r\n\r\n  }\r\n\r\n  img {\r\n    display: block;\r\n    /* width: 100%; */\r\n    /* height: 100%; */\r\n    width: 200px;\r\n    height: 200px;\r\n    object-fit: cover;\r\n    /* transition: transform .2s; */\r\n    /* box-shadow: 3px 3px 10px rgba(0, 0, 0, .25); */\r\n\r\n    &:hover {\r\n      /* transform: scale(1.1); */\r\n    }\r\n  }\r\n`;\r\nconst ImagesGrid = styled.div`\r\n    display: grid;\r\n    /* grid-template-rows: repeat(8, 5vw); */\r\n    /* grid-template-columns: repeat(4, 1fr); */\r\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n    grid-gap: 1em;\r\n\r\n    img {\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n        /* width: 350px;\r\n        height: 350px; */\r\n        object-fit: cover;\r\n    }\r\n`;\r\n\r\nconst photosNature = [\r\n    \"2020-11-23 DSC_0008_edit1_square.JPG\",\r\n    \"2020-11-20 DSC_0047_edit1_square.JPG\",\r\n    \"2020-11-20 DSC_0044_edit1_square.jpg\",\r\n    \"2020-09-12 DSC_0094_square.JPG\",\r\n    \"2020-09-12 DSC_0085_square.JPG\",\r\n    \"2020-09-12 DSC_0060_square.JPG\",\r\n    \"2020-09-12 DSC_0053_square.JPG\",\r\n    \"2020-09-10 DSC_0007_square.JPG\",\r\n    \"2020-08-29 DSC_0063_square.JPG\",\r\n    \"2020-08-20 DSC_0106_square.JPG\",\r\n    \"2020-08-20 DSC_0067_square.JPG\",\r\n    \"2020-08-17 DSC_0073_square.JPG\",\r\n    \"2020-08-17 DSC_0025_square.JPG\",\r\n    \"2020-07-29 DSC_0041_crop1_square.JPG\",\r\n    '2020-07-29 DSC_0008_edit1_square.JPG',\r\n    \"2020-07-28 DSC_0027_edit1_square.JPG\",\r\n    '2020-07-27 DSC_0025_orig_square.JPG',\r\n    \"2020-07-25 DSC_0148_edit1_crop2_square.JPG\",\r\n    \"2020-07-25 DSC_0104_edit1_crop1_square.JPG\",\r\n    \"2020-07-24 DSC_0030_edit1_crop2_square.JPG\",\r\n    \"2020-07-10 DSC_0090_edit1_crop1_square.JPG\",\r\n    \"2020-06-25 DSC_0059_edit2_crop1_square.JPG\",\r\n    \"2020-06-23 DSC_0145_edit1_square.JPG\",\r\n    \"2020-06-17 DSC_0091_edit1_crop1_square.JPG\",\r\n    \"2020-06-16 DSC_0244_square.JPG\",\r\n    \"2020-06-16 DSC_0218_square.JPG\",\r\n    \"2020-06-16 DSC_0214_square.JPG\",\r\n    '2020-06-10 DSC_0152_edit1_crop1_square.JPG',\r\n    '2020-06-07 DSC_0098_edit1_crop1_square.JPG',\r\n    '2020-06-06 DSC_0112_edit1_square.JPG',\r\n    '2020-06-05 DSC_0073_edit3_square.JPG',\r\n    '2020-06-05 DSC_0073_edit2_square.JPG',\r\n    '2020-06-05 DSC_0034_edit3_crop1_square.JPG',\r\n    '2020-06-05 DSC_0033_edit5_square.JPG',\r\n    '2020-06-04 DSC_0392_edit1_square.JPG',\r\n    '2020-06-01 DSC_0297_edit1_square.JPG',\r\n    '2020-05-27 DSC_0025_edited_square.JPG',\r\n];\r\nconst photosPatterns = [\r\n    '2020-06-04 DSC_0383_edit1.JPG',\r\n    '2020-06-04 DSC_0391_edit1.JPG',\r\n    '2020-06-07 DSC_0008_edit2.JPG',\r\n    '2020-06-07 DSC_0068_edit1.JPG',\r\n    '2020-06-09 DSC_0044_edit1.JPG',\r\n    '2020-06-13 DSC_0025_edit1.JPG',\r\n    '2020-06-16 DSC_0154_edit1.JPG',\r\n    '2020-06-16 DSC_0249_edit1.JPG',\r\n];\r\n\r\nconst ImagesBlockWrapper = styled.div`\r\n    > * + * {\r\n        margin-top: 1em;\r\n    }\r\n`;\r\nconst VideoBlock = styled.div`\r\n    background-color: #eee;\r\n\r\n    video {\r\n        max-width: 640px;\r\n        margin: 0 auto;\r\n        display: block;\r\n    }\r\n`;\r\nconst ImagesBlockHeader = styled.h3`\r\n    color: rgba(0, 0, 0, .5);\r\n    font-size: .75em;\r\n    line-height: 1;\r\n    padding-bottom: .25em;\r\n    border-bottom: 1px solid rgba(0, 0, 0, .2);\r\n    margin-bottom: 1em;\r\n`;\r\n\r\nfunction ImagesBlock(props: {imageGroup: ImageGroup}) {\r\n    const {imageGroup} = props;\r\n\r\n    return (\r\n        <ImagesBlockWrapper>\r\n            {/* <ImagesBlockHeader>{props.title}</ImagesBlockHeader> */}\r\n\r\n            {\r\n                imageGroup.gfycatId\r\n                &&\r\n                <VideoBlock>\r\n                    <video\r\n                        autoPlay={false}\r\n                        playsInline={false}\r\n                        preload=\"auto\"\r\n                        poster={`https://thumbs.gfycat.com/${imageGroup.gfycatId}-mobile.jpg`}\r\n                        tabIndex={-1}\r\n                        // width={1600}\r\n                        // height={900}\r\n                        controls={true}\r\n                    >\r\n                        <source src={`https://thumbs.gfycat.com/${imageGroup.gfycatId}-mobile.mp4`} type=\"video/mp4\" />\r\n                        <source src={`https://giant.gfycat.com/${imageGroup.gfycatId}.webm`} type=\"video/webm\" />\r\n                        <source src={`https://giant.gfycat.com/${imageGroup.gfycatId}.mp4`} type=\"video/mp4\" />\r\n                        <source src={`https://thumbs.gfycat.com/${imageGroup.gfycatId}-mobile.mp4`} type=\"video/mp4\" />\r\n                    </video>\r\n                </VideoBlock>\r\n            }\r\n\r\n            <ImagesGrid>\r\n                {\r\n                    imageGroup.paths.map((imgPath, i) => {\r\n                        return (\r\n                            <div key={imgPath}>\r\n                                <img\r\n                                    loading=\"lazy\"\r\n                                    src={`${imageGroup.basePath}${imgPath}`}\r\n                                    width={300}\r\n                                    height={300}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </ImagesGrid>\r\n        </ImagesBlockWrapper>\r\n    );\r\n}\r\n\r\ninterface ImageGroup {\r\n    title: string;\r\n    basePath: string;\r\n    paths: string[];\r\n    gfycatId?: string;\r\n    Content?: () => JSX.Element;\r\n}\r\n\r\nconst imageGroups: ImageGroup[] = [\r\n    {\r\n        title: \"Photography\",\r\n        basePath: '/images/photos/',\r\n        gfycatId: 'LikableWebbedFly',\r\n        paths: photosNature,\r\n    },\r\n];\r\n\r\nexport default function PhotographyBlock() {\r\n    return (\r\n        <div>\r\n            <div style={{ backgroundColor: '#fff' }}>\r\n                <ContentBlock>\r\n                    <div style={{ padding: '2em 0' }}>\r\n                        <TextBlock>\r\n                            <h2>Photography</h2>\r\n\r\n                            {\r\n                                imageGroups.map(imageGroup => {\r\n                                    return (\r\n                                        <ImagesBlock\r\n                                            key={imageGroup.title}\r\n                                            imageGroup={imageGroup}\r\n                                        />\r\n                                    );\r\n                                })\r\n                            }\r\n                        </TextBlock>\r\n                    </div>\r\n                </ContentBlock>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport {Link} from 'gatsby';\n\nimport {DefaultLayout} from '../components/layouts/default-layout';\nimport HomePageEditor from \"../components/pages/home-page/home-page-editor\";\nimport GraphicalArtsBlock from \"../components/pages/home-page/graphical-arts-block\";\nimport HelloBlock from \"../components/pages/home-page/hello-block\";\nimport GamedevBlock from \"../components/pages/home-page/gamedev-block\";\nimport PhotographyBlock from \"../components/pages/home-page/photography-block\";\n\nconst layoutWidth = 1280;\nconst layoutPadding = '1em';\nconst Wrapper = styled.div`\n    /* > * + * {\n        margin-top: 1em;\n    } */\n`;\nconst ContentBlock = styled.div`\n    padding: 0 ${layoutPadding};\n    max-width: ${layoutWidth}px;\n    margin: 0 auto;\n`;\nconst footerBorderColor = '#eee';\nconst Footer = styled.div`\n    color: #777;\n    font-family: 'Inconsolata', monospace;\n    font-size: .45em;\n    line-height: 1;\n    text-align: center;\n    padding: 2em 0;\n    border-top: 1px solid ${footerBorderColor};\n`;\n\nexport default function Home() {\n  const [email, setEmail] = React.useState('');\n\n  React.useEffect(() => {\n    const emailArr = ['lukasz', '(at)', 'grolik', '.', 'pl'];\n    setEmail(emailArr.join('').replace('(at)', '@'));\n  }, []);\n\n  return <DefaultLayout>\n    <Wrapper>\n        <div style={{backgroundColor: '#fff'}}>\n            <ContentBlock>\n                <div style={{padding: '3em 0'}}>\n                    <div style={{display: 'flex', justifyContent: 'center'}}>\n                        <HelloBlock />\n                    </div>\n                </div>\n            </ContentBlock>\n        </div>\n\n      <div>\n        {/* <div style={{border: '0 solid #000', borderWidth: '2em 0'}}> */}\n            <HomePageEditor />\n        {/* </div> */}\n      </div>\n\n      {/* <div style={{backgroundColor: '#fff'}}>\n        <ContentBlock>\n          <div style={{padding: '2em 0'}}>\n            <TextBlock>\n              <p>My best motivation to learn new programming stuff is to leverage it within my personal projects. The prospect of utilizing technologies to bring my own vision to life is what keeps me going.</p>\n\n              <img src=\"/images/madfractal/devlog-6-thumbnail-bg.png\" alt=\"\" style={{width: 480, height: 270, float: 'right', marginLeft: '1em', marginBottom: '1em'}} />\n              <img src=\"/images/madfractal/devlog-5-thumbnail-bg.png\" alt=\"\" style={{width: 480, height: 270, float: 'right', clear: 'right', marginTop: 0, marginLeft: '1em', marginBottom: '1em'}} />\n              <p>My main side-project is a computer game called <strong>Madfractal</strong> which I've been working on since 2019 using the <strong>Unity</strong> engine. It's heavily inspired by the <strong>Diablo II</strong> game which I used to play a lot. I think the dark, gothic atmosphere of the game is what made me take a chance at implementing my own take on the action-RPG genre.</p>\n\n              <img src=\"/images/madfractal/devlog-5-thumbnail-bg.png\" alt=\"\" style={{width: 480, height: 270, float: 'left', marginRight: '1em', marginBottom: '1em'}} />\n              <p>You can visit <a href=\"https://madfractal.com\" target=\"__blank\">madfractal.com</a> and my gamedev Twitter channel <a href=\"https://twitter.com/LukGameDev\" target=\"__blank\">twitter.com/LukGameDev</a> for latest news.</p>\n            </TextBlock>\n          </div>\n        </ContentBlock>\n      </div> */}\n\n      {/* <div style={{backgroundColor: '#bbb'}}>\n        <ContentBlock>\n          <div style={{padding: '2em 0'}}>\n            <TextBlock>\n              <p>I have a YouTube channel where I mainly post devlogs for the game among other gamedev-related experiments, sometimes in a form of music-videos, and other stuff like a few web-dev videos.</p>\n            </TextBlock>\n          </div>\n        </ContentBlock>\n      </div> */}\n\n        <div>\n            <GamedevBlock />\n        </div>\n\n        <div>\n            <GraphicalArtsBlock />\n        </div>\n\n        <div>\n            <PhotographyBlock />\n        </div>\n\n        <div>\n            <Footer>\n                <div>2013-2021 <span style={{fontSize: '1.5em'}}>©</span> Łukasz Grolik <span style={{color: footerBorderColor}}>|</span> {email}</div>\n            </Footer>\n        </div>\n    </Wrapper>\n  </DefaultLayout>\n}\n"],"sourceRoot":""}